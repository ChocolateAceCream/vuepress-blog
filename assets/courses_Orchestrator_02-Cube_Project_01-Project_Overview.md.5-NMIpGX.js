import{_ as d}from"./chunks/ArticleMetadata.41rSz6Gb.js";import{_ as u,D as a,o,c as p,k as l,a as i,I as c,w as _,R as m,b as v,e as k}from"./chunks/framework.lWSK3XUC.js";import"./chunks/md5.US-HucPO.js";const f="/vuepress-blog/assets/overall_arch.YVl29jJu.png",g="/vuepress-blog/assets/task-life-cycle.FkLKGJge.png",B=JSON.parse('{"title":"Cube Project Overview","description":"","frontmatter":{"title":"Cube Project Overview","author":"ChocolateAceCream","date":"2024/03/22 10:24","isTop":true,"categories":["Orchestrator"],"tags":["Orchestrator"]},"headers":[],"relativePath":"courses/Orchestrator/02-Cube_Project/01-Project_Overview.md","filePath":"courses/Orchestrator/02-Cube_Project/01-Project_Overview.md","lastUpdated":1714767430000}'),b={name:"courses/Orchestrator/02-Cube_Project/01-Project_Overview.md"},C={id:"cube-project-overview",tabindex:"-1"},P=l("a",{class:"header-anchor",href:"#cube-project-overview","aria-label":'Permalink to "Cube Project Overview<Badge text="Orchestrator" type="warning" />"'},"​",-1),w=m('<h3 id="overall-architecture" tabindex="-1">Overall Architecture <a class="header-anchor" href="#overall-architecture" aria-label="Permalink to &quot;Overall Architecture&quot;">​</a></h3><p><img src="'+f+'" alt="overall_arch"></p><h3 id="task-life-cycle" tabindex="-1">task life-cycle <a class="header-anchor" href="#task-life-cycle" aria-label="Permalink to &quot;task life-cycle&quot;">​</a></h3><p><img src="'+g+'" alt="task life-cycle"></p><h3 id="tools-and-libs" tabindex="-1">Tools and Libs <a class="header-anchor" href="#tools-and-libs" aria-label="Permalink to &quot;Tools and Libs&quot;">​</a></h3><ul><li>Go</li><li>chi</li><li>Docker SDK</li><li>BoltDB</li><li>goprocinfo</li></ul><h4 id="docker-sdk" tabindex="-1">Docker SDK <a class="header-anchor" href="#docker-sdk" aria-label="Permalink to &quot;Docker SDK&quot;">​</a></h4><p>We can use docker cli to send command to control docker, or send curl request via UDP or TCP to trigger docker api. Or, we can use high level go docker SDK to communicate with docker. Common APIs are:</p><ul><li><p>NewClientWithOpts A helper method that instantiates an instance of the client and returns it to the caller</p></li><li><p>ImagePull Pulls the image down to the local machine where it will be run</p></li><li><p>ContainerCreate Creates a new container with a given configuration</p></li><li><p>ContainerStart Sends a request to Docker Engine to start the newly created container</p></li><li><p>ContainerStop Sends a request to Docker Engine to stop a running container</p></li><li><p>ContainerRemove Removes the container from the host</p></li></ul>',9);function O(e,j,D,S,y,q){const n=a("Badge"),s=d,h=a("ClientOnly");return o(),p("div",null,[l("h1",C,[i("Cube Project Overview"),c(n,{text:"Orchestrator",type:"warning"}),i(),P]),c(h,null,{default:_(()=>{var t,r;return[(((t=e.$frontmatter)==null?void 0:t.aside)??!0)&&(((r=e.$frontmatter)==null?void 0:r.showArticleMetadata)??!0)?(o(),v(s,{key:0,article:e.$frontmatter},null,8,["article"])):k("",!0)]}),_:1}),w])}const N=u(b,[["render",O]]);export{B as __pageData,N as default};
