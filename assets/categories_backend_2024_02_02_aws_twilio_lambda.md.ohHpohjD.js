import{_ as d}from"./chunks/ArticleMetadata.CMcjCax5.js";import{_ as g,m as n,a as o,e as p,x as t,u as h,B as y,ah as D,o as l,p as A,q as F}from"./chunks/framework.BuAcqOzq.js";import"./chunks/theme.Y9ImI41h.js";const c="/vuepress-blog/assets/1.drawio.BsgyLZ3E.png",P=JSON.parse('{"title":"Twilio AWS Lambda Func","description":"","frontmatter":{"title":"Twilio AWS Lambda Func","author":"ChocolateAceCream","date":"2024/02/02 19:00","isTop":false,"categories":["backend"],"tags":["Go","Twilio","AWS Lambda Function","AWS","SMS"]},"headers":[],"relativePath":"categories/backend/2024/02/02/aws_twilio_lambda.md","filePath":"categories/backend/2024/02/02/aws_twilio_lambda.md","lastUpdated":1714716219000}'),C={name:"categories/backend/2024/02/02/aws_twilio_lambda.md"},u={id:"integrate-twilio-in-aws-lambda-function",tabindex:"-1"},B=p("a",{class:"header-anchor",href:"#integrate-twilio-in-aws-lambda-function","aria-label":'Permalink to "Integrate twilio in aws lambda function <Badge text="AWS" type="warning" />"'},"​",-1),E=D('<h2 id="architecture" tabindex="-1">architecture <a class="header-anchor" href="#architecture" aria-label="Permalink to &quot;architecture&quot;">​</a></h2><p><img src="'+c+`" alt="arch"></p><h2 id="steps-to-implement" tabindex="-1">steps to implement <a class="header-anchor" href="#steps-to-implement" aria-label="Permalink to &quot;steps to implement&quot;">​</a></h2><h3 id="lambda-function-setup" tabindex="-1">lambda function setup <a class="header-anchor" href="#lambda-function-setup" aria-label="Permalink to &quot;lambda function setup&quot;">​</a></h3><ol><li>setup lambda function to send request to twilio api</li></ol><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">context</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">encoding/json</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">fmt</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">os</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">github.com/aws/aws-lambda-go/lambda</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">github.com/twilio/twilio-go</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	twilioApi </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">github.com/twilio/twilio-go/rest/api/v2010</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Payload</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> struct</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	To  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">string</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> \`json:&quot;to&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	Msg </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">string</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> \`json:&quot;msg&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> HandleRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">ctx</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> context</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Context</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">event</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> *</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Payload</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(event)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> event </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Errorf</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;received nil event&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">	SendSMS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">event)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	message </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Sprintf</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;send message </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">%s</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> to </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">%s</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, event.Msg, event.To)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">message, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">nil</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	lambda.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Start</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(HandleRequest)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> SendSMS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">payload</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Payload</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) (</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">resp</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> []</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">err</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	from </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> os.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Getenv</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;from&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> os.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Getenv</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;username&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	password </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> os.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Getenv</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;password&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">	// from := os.Getenv(&quot;TWILIO_TO_PHONE_NUMBER&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> twilio.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">NewRestClientWithParams</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">twilio</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ClientParams</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		Username: username,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		Password: password,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	params </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">twilioApi</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">CreateMessageParams</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	params.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">SetTo</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(payload.To)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	params.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">SetFrom</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(from)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	params.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">SetBody</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(payload.Msg)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	t, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> client.Api.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">CreateMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(params)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		return</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	resp, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> json.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Marshal</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">t)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	return</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>p.s. remember to add environmental variable in lambda configuration tab.</p><ol start="2"><li>build your main.go into a zip file, then upload to lambda function</li></ol><div class="language-makefile vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">makefile</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">.PHONY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	GOARCH=amd64 GOOS=linux go build -o bootstrap main.go;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	zip bootstrap.zip bootstrap</span></span></code></pre></div><p>p.s. the output executable file name has to be bootstrap. remember to upload it to lambda console under code tab and change the handler name to main in Runtime settings.</p><h3 id="api-gateway-setup" tabindex="-1">api gateway setup <a class="header-anchor" href="#api-gateway-setup" aria-label="Permalink to &quot;api gateway setup&quot;">​</a></h3><ol><li><p>build api create api -&gt; REST API -&gt; enter api name -&gt; create</p></li><li><p>associate that lambda function as a endpoint create resource -&gt; enter resource name: sms -&gt; create resource</p></li></ol><p>now you should have a /sms resource under root path. then you can</p><p>create method -&gt; lambda function -&gt; select request method (POST) -&gt; select the lambda function you just created -&gt; create method</p><p>now you should have a POST method under /sms resource</p><ol start="3"><li>add auth for the api-gateway This can be done several ways. I tried the following two approaches: attach policy to user group or attach policy to api-gateways</li></ol><h4 id="_3-1-attach-policy-to-user-group" tabindex="-1">3.1 attach policy to user group <a class="header-anchor" href="#_3-1-attach-policy-to-user-group" aria-label="Permalink to &quot;3.1 attach policy to user group&quot;">​</a></h4><p>3.1.1 create a group which has access policy to the api gateway: create group -&gt; enter group name -&gt; seach AmazonAPIGatewayInvokeFullAccess policy -&gt; create iser group</p><p>in case AmazonAPIGatewayInvokeFullAccess policy changed, the actual policy is like this:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">    &quot;Version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;2012-10-17&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">    &quot;Statement&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">            &quot;Effect&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Allow&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">            &quot;Action&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                &quot;execute-api:Invoke&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                &quot;execute-api:ManageConnections&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">            ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">            &quot;Resource&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;arn:aws:execute-api:*:*:*&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h5 id="_3-1-2-add-user-to-that-group" tabindex="-1">3.1.2 add user to that group <a class="header-anchor" href="#_3-1-2-add-user-to-that-group" aria-label="Permalink to &quot;3.1.2 add user to that group&quot;">​</a></h5><p>IAM console-&gt;create new user -&gt; enter user name -&gt; add user to group -&gt; select the group you just created -&gt; create user</p><p>3.1.3 create access keys for user and copy that key in your host machines&#39; .aws/config file, like this:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[profile user1]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">region</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> us-west-1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">service</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> execute-api</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">aws_access_key_id</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> xxxxxxx</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">aws_secret_access_key</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> xxxxxxxx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[profile user2]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">region</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> us-west-1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">service</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> execute-api</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">aws_access_key_id</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> xxxxx</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">aws_secret_access_key</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> xxxxx</span></span></code></pre></div><h4 id="_3-2-attach-policy-to-api-gateway" tabindex="-1">3.2 attach policy to api gateway <a class="header-anchor" href="#_3-2-attach-policy-to-api-gateway" aria-label="Permalink to &quot;3.2 attach policy to api gateway&quot;">​</a></h4><p>this approach can be used to implement further detailed control the access to each endpoint of that gateway.</p><p>3.1.2 create a user in IAM and copy its ARN. 3.1.3 attach policy: API gateway console -&gt; Resource policy -&gt; add policy then paste the following policy:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">  &quot;Version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;2012-10-17&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">  &quot;Statement&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">      &quot;Effect&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Allow&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">      &quot;Principal&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">        &quot;AWS&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          &quot;arn:aws:iam::xxx:user/di2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          &quot;arn:aws:iam::xxx:user/di&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">          &quot;arn:aws:iam::xxx:root&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">      &quot;Action&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;execute-api:Invoke&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">      &quot;Resource&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;arn:aws:execute-api:us-west-1:xxx:xxx/beta/POST/lambdav2&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>which is modified based on AWS account allow list template.</p><p>Remember to deploy api again to take that policy into effect.</p><h3 id="call-api-gateway-from-local-go-code" tabindex="-1">call api gateway from local go code <a class="header-anchor" href="#call-api-gateway-from-local-go-code" aria-label="Permalink to &quot;call api gateway from local go code&quot;">​</a></h3><p>after api deployed, you can see a invoke url displayed in stage details panel. We need to call the url attached to the endpoint which bind with lambda function to invoke the lambda function. And in order to auth, we need to sign the request using aws-sdk-go-v2/aws/signer/v4.</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">bytes</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">context</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">crypto/sha256</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">fmt</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">log</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">net/http</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">time</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	v4 </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">github.com/aws/aws-sdk-go-v2/aws/signer/v4</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">github.com/aws/aws-sdk-go-v2/config</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">	/*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">	  load shared credentials files from ~/.aws/config,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">	  sample config file:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">	  [profile admin]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">	  region = us-west-1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">	  service = execute-api</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">	  aws_access_key_id = xxxxxx</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">	  aws_secret_access_key = xxxxxxxxxx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">	  visit https://docs.aws.amazon.com/sdkref/latest/guide/file-format.html for more details</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">	*/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	ctx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> context.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Background</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	cfg, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> config.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">LoadDefaultConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ctx, config.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">WithSharedConfigProfile</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;di2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		log.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Fatalf</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;unable to load SDK config, </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">%v</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, err)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">	// check if credential is valid</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	credentials, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> cfg.Credentials.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Retrieve</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ctx)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		log.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Fatalf</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Credentials.Retrieve err, </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">%v</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, err)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	apiUrl </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;your-invoke-url&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">	// apiUrl := &quot;https://&lt;endpoint-url&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">	// Request body</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">	// jsonStr := []byte(\`{&quot;To&quot;:&quot;&lt;target-phone-number&gt;&quot;,&quot;Msg&quot;:&quot;hello world&quot;}\`)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	jsonStr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> []</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">\`{&quot;To&quot;:&quot;+1xxxxx&quot;,&quot;Msg&quot;:&quot;asdfasd&quot;}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	req, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> http.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">NewRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;POST&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, apiUrl, bytes.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">NewBuffer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(jsonStr))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		log.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Fatalf</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;http.NewRequest err, </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">%v</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, err)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	reqBodyHashBytes </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> sha256.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Sum256</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(jsonStr)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	reqBodyHashHex </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Sprintf</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">%x</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, reqBodyHashBytes)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	signer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> v4.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">NewSigner</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> signer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">SignHTTP</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ctx, credentials, req, reqBodyHashHex, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;execute-api&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, cfg.Region, time.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Now</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()); err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Printf</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Error signing request.</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		return</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">http</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Client</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	resp, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> client.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Do</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(req)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Error reading response body:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, err)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		return</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	defer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> resp.Body.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Close</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;response Status:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, resp.Status)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">	// Print the response body</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	buf </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">bytes</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Buffer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	buf.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">ReadFrom</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(resp.Body)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;response Body:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, buf.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div>`,33);function m(s,q,f,b,w,x){const k=n("Badge"),e=d,r=n("ClientOnly");return l(),o("div",null,[p("h1",u,[t("Integrate twilio in aws lambda function "),h(k,{text:"AWS",type:"warning"}),t(),B]),h(r,null,{default:y(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(l(),A(e,{key:0,article:s.$frontmatter},null,8,["article"])):F("",!0)]}),_:1}),E])}const T=g(C,[["render",m]]);export{P as __pageData,T as default};
