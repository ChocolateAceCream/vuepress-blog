import{_ as d}from"./chunks/ArticleMetadata.DfNj5RsG.js";import{_ as k,m as e,a as m,e as h,x as t,u as n,B as c,ah as g,o as l,p as y,q as A}from"./chunks/framework.BuAcqOzq.js";import"./chunks/theme.CQ1f9qg2.js";const P=JSON.parse('{"title":"Time & Date","description":"","frontmatter":{"title":"Time & Date","author":"ChocolateAceCream","date":"2025/03/22 19:30","isTop":true,"categories":["PostgreSQL"],"tags":["PostgreSQL","Timestamp"]},"headers":[],"relativePath":"courses/PostgreSQL/01-Basic/04-timezone.md","filePath":"courses/PostgreSQL/01-Basic/04-timezone.md","lastUpdated":1742859251000}'),u={name:"courses/PostgreSQL/01-Basic/04-timezone.md"},D={id:"time-date-in-pgsql",tabindex:"-1"},F=h("a",{class:"header-anchor",href:"#time-date-in-pgsql","aria-label":'Permalink to "Time & Date in PGSQL <Badge text="PostgreSQL" type="warning" />"'},"​",-1),C=g(`<h2 id="common-standard-for-handle-time-date" tabindex="-1">Common standard for handle time/date <a class="header-anchor" href="#common-standard-for-handle-time-date" aria-label="Permalink to &quot;Common standard for handle time/date&quot;">​</a></h2><h3 id="rfc3339-iso-8601" tabindex="-1">RFC3339 &amp; ISO 8601 <a class="header-anchor" href="#rfc3339-iso-8601" aria-label="Permalink to &quot;RFC3339 &amp; ISO 8601&quot;">​</a></h3><p>RFC 3339 is subset of ISO 8601, so any valid RFC is also valid ISO</p><h4 id="iso-8601-examples" tabindex="-1">ISO 8601 Examples <a class="header-anchor" href="#iso-8601-examples" aria-label="Permalink to &quot;ISO 8601 Examples&quot;">​</a></h4><ol><li><p>Date Format: YYYY-MM-DD Example: 2023-10-05 (October 5, 2023).</p></li><li><p>Time Format: hh:mm:ss.sss (24-hour clock). Example: 14:30:45.123 (2:30:45.123 PM).</p></li><li><p>Combined Date and Time: YYYY-MM-DDThh:mm:ss.sssZ</p></li></ol><ul><li>T separates the date and time.</li><li>Z indicates UTC (Coordinated Universal Time). Example: 2023-10-05T14:30:45Z.</li></ul><ol start="4"><li><p>Time Zone Offsets: ±hh:mm or ±hhmm can be used to specify a time zone offset from UTC. Example: 2023-10-05T14:30:45+02:00 (2 hours ahead of UTC).</p></li><li><p>Durations: Represented as PnYnMnDTnHnMnS. Example: P1Y2M3DT4H5M6S (1 year, 2 months, 3 days, 4 hours, 5 minutes, and 6 seconds).</p></li><li><p>Intervals: Represented as start/end or start/duration. Example: 2023-10-05T14:30:45Z/2023-10-06T14:30:45Z.</p></li></ol><h4 id="rfc3339-example" tabindex="-1">RFC3339 example <a class="header-anchor" href="#rfc3339-example" aria-label="Permalink to &quot;RFC3339 example&quot;">​</a></h4><ol><li><p>Date Format: YYYY-MM-DD Example: 2023-10-05.</p></li><li><p>Time Format: hh:mm:ss.sss (24-hour clock). Example: 14:30:45.123.</p></li><li><p>Combined Date and Time: YYYY-MM-DDThh:mm:ss.sssZ or YYYY-MM-DDThh:mm:ss.sss±hh:mm.</p></li></ol><ul><li>T separates the date and time.</li><li>Z indicates UTC.</li><li>±hh:mm specifies a time zone offset. Example: 2023-10-05T14:30:45+02:00.</li></ul><p>Key Difference:</p><ul><li>ISO 8601 can be used to present date, time, datetime, duration, intervals, but RFC 3339 can only be used to present datetime.</li></ul><h2 id="timestamp-timestamptz-and-interval" tabindex="-1">timestamp, timestamptz and interval <a class="header-anchor" href="#timestamp-timestamptz-and-interval" aria-label="Permalink to &quot;timestamp, timestamptz and interval&quot;">​</a></h2><p>timestamp, timestamptz are two common type to store datetime info, one without timezone info and one with. If you use timestamp, then somewhere in your code you need to convert time to UTC when store and convert back to your timezone when retrieve. If you use timestamp, you can directly store the datetime with zone info.</p><h3 id="recommendation" tabindex="-1">Recommendation <a class="header-anchor" href="#recommendation" aria-label="Permalink to &quot;Recommendation&quot;">​</a></h3><ul><li>If you use timestamp, ensure all timestamps are stored in a consistent time zone and handle time zone conversions explicitly in your code</li><li>For micro services, since every service may deal with timezone differently, use timestamp is a more flexible approach.</li><li>For monolithic, if cross-region, then consider use timestamptz to handle the timezone part for you.</li></ul><h3 id="interval" tabindex="-1">Interval <a class="header-anchor" href="#interval" aria-label="Permalink to &quot;Interval&quot;">​</a></h3><p>An interval represents a duration of time. It can include components such as:</p><ul><li>Years</li><li>Months</li><li>Days</li><li>Hours</li><li>Minutes</li><li>Seconds</li><li>Milliseconds e.g.</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">INTERVAL </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;1 day&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">          -- 1 day</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">INTERVAL </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2 hours&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">        -- 2 hours</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">INTERVAL </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;3 months&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">       -- 3 months</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">INTERVAL </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;1 year 6 months&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> -- 1 year and 6 months</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">INTERVAL </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;1 day 12:30:45&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> -- 1 day, 12 hours, 30 minutes, and 45 seconds</span></span></code></pre></div><h2 id="common-functions" tabindex="-1">Common functions <a class="header-anchor" href="#common-functions" aria-label="Permalink to &quot;Common functions&quot;">​</a></h2><h3 id="date-part-text-timestamptz" tabindex="-1">DATE_PART(text, timestamptz) <a class="header-anchor" href="#date-part-text-timestamptz" aria-label="Permalink to &quot;DATE_PART(text, timestamptz)&quot;">​</a></h3><p><code>DATE_PART</code> function is used to extract a specific part of a date or time. However, it can <strong>only</strong> be used to <strong>extract one field</strong>, such as year or month or day or hour etc... e.g.</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> date_part(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;month&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, bill_time)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- select bill_time field and extract the month</span></span></code></pre></div><p>p.s. date_part is pgsql special</p><h3 id="date-trunc" tabindex="-1">DATE_TRUNC() <a class="header-anchor" href="#date-trunc" aria-label="Permalink to &quot;DATE_TRUNC()&quot;">​</a></h3><p><code>DATE_TRUNC</code> can be used to truncate a timestamp/interval to the beginning of certain field e.g. truncate the timestamp to the beginning of that month</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> date_trunc(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;month&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2020-02-14&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">timestamptz</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- return 2020-02-01 00:00:00+00</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> date_trunc(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;MINUTE&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2020-02-14T12:23:22&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">timestamptz</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- return 2020-02-14 12:23:00+00</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> DATE_TRUNC(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;month&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, INTERVAL </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;1 year 3 months 15 days&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- return 1 year 3 mons</span></span></code></pre></div><h3 id="age-end-start" tabindex="-1">AGE(end,start) <a class="header-anchor" href="#age-end-start" aria-label="Permalink to &quot;AGE(end,start)&quot;">​</a></h3><p>return interval between start end datetime and start datetime e.g.</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> AGE(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2023-10-05&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">timestamp</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;1985-08-17&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">timestamp</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- return 38 years 1 mon 19 days</span></span></code></pre></div><h3 id="extract" tabindex="-1">EXTRACT <a class="header-anchor" href="#extract" aria-label="Permalink to &quot;EXTRACT&quot;">​</a></h3><p>extract certain field of given interval or timestamp</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> extract(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">day</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> AGE(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2023-10-05&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">timestamp</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;1985-08-17&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">timestamp</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- return 19</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> extract(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">month</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> AGE(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;2023-10-05&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">timestamp</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;1985-08-17&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">timestamp</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- return 1</span></span></code></pre></div><p>Most commonly used is <strong>epoch</strong> to convert seconds of given interval. if input is a datetime, then return the number of seconds since January 1, 1970, 00:00:00 UTC.</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">select</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> round</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(extract(epoch </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;1988-07-17&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">timestamp</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- return 585100800, which is number of seconds between January 1, 1970, 00:00:00 UTC. and &#39;1988-07-17&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">select</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> round</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(extract(epoch </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> NOW</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;1988-11-11&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">timestamp</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">86400</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- return 13282, which is days between now and &#39;1988-11-11&#39;</span></span></code></pre></div><p>p.s. compare to date_part (pgsql special), extract is common sql standard and widely supported.</p>`,37);function f(s,E,b,T,v,B){const p=e("Badge"),r=d,o=e("ClientOnly");return l(),m("div",null,[h("h1",D,[t("Time & Date in PGSQL "),n(p,{text:"PostgreSQL",type:"warning"}),t(),F]),n(o,null,{default:c(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(l(),y(r,{key:0,article:s.$frontmatter},null,8,["article"])):A("",!0)]}),_:1}),C])}const R=k(u,[["render",f]]);export{P as __pageData,R as default};
