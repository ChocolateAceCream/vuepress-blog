import{_ as c}from"./chunks/ArticleMetadata.CtILaBjn.js";import{_ as o,m as t,a as d,e as n,x as e,u as h,B as g,ah as m,o as l,p as F,q as y}from"./chunks/framework.BuAcqOzq.js";import"./chunks/theme.CfTXx1TZ.js";const N=JSON.parse('{"title":"Git cherry-pick","description":"","frontmatter":{"title":"Git cherry-pick","author":"ChocolateAceCream","date":"2024/12/01 19:50","isTop":false,"categories":["DevOps"],"tags":["Git"]},"headers":[],"relativePath":"categories/DevOps/2024/12/01/git_cherry-pick.md","filePath":"categories/DevOps/2024/12/01/git_cherry-pick.md","lastUpdated":1733112426000}'),D={name:"categories/DevOps/2024/12/01/git_cherry-pick.md"},u={id:"git-cherry-pick",tabindex:"-1"},b=n("a",{class:"header-anchor",href:"#git-cherry-pick","aria-label":'Permalink to "Git cherry-pick <Badge text="Git" type="warning" />"'},"​",-1),_=m(`<p>Use case: grab one or multiple commits from other branch.</p><h3 id="commands" tabindex="-1">commands <a class="header-anchor" href="#commands" aria-label="Permalink to &quot;commands&quot;">​</a></h3><ol><li>cherry pick a single commit:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cherry-pick</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">commit-has</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&gt;</span></span></code></pre></div><ol start="2"><li>by default, using range cherry-pick will not include its beginning commit e.g. this only pick commit 2 &amp; 3</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cherry-pick</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">commit-hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">1&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">..</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">commit-hash-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">3&gt;</span></span></code></pre></div><ol start="3"><li>grab multiple commit from [1,3] so if you want to include the beginning commit, use <em><strong>^</strong></em></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cherry-pick</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">commit-hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">1&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">^..</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">commit-hash-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">3&gt;</span></span></code></pre></div><ol start="4"><li>when cherry-pick multiple commits, must pick commits in order of the commit time.</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cherry-pick</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">commit-hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">1&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">commit-hash-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">3&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">commit-hash-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">5&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># cannot do 5, 3, 1</span></span></code></pre></div><ol start="5"><li>By default, cherry-pick will create new commits for each picked commit, e.g.</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cherry-pick</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">commit-hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">1&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">commit-hash-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">3&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">commit-hash-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">5&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># will create 3 commits for 1,3,5</span></span></code></pre></div><p>If you want to avoid that, you can use -n flag</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> cherry-pick</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">commit-hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">1&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">commit-hash-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">3&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">commit-hash-</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">5&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># will create 3 commits for 1,3,5</span></span></code></pre></div><p>which will pause all commit after pick, so you need to do it yourself after the cherry-pick.</p>`,15);function A(i,v,C,f,w,B){const p=t("Badge"),k=c,r=t("ClientOnly");return l(),d("div",null,[n("h1",u,[e("Git cherry-pick "),h(p,{text:"Git",type:"warning"}),e(),b]),h(r,null,{default:g(()=>{var s,a;return[(((s=i.$frontmatter)==null?void 0:s.aside)??!0)&&(((a=i.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(l(),F(k,{key:0,article:i.$frontmatter},null,8,["article"])):y("",!0)]}),_:1}),_])}const O=o(D,[["render",A]]);export{N as __pageData,O as default};
