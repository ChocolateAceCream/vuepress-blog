import{_ as d}from"./chunks/ArticleMetadata.41rSz6Gb.js";import{_ as c,D as a,o as n,c as k,k as o,a as t,I as l,w as y,R as f,b as u,e as m}from"./chunks/framework.lWSK3XUC.js";import"./chunks/md5.US-HucPO.js";const g="/vuepress-blog/assets/rolling_deployment.49yGAEhp.png",D="/vuepress-blog/assets/blue_green_deployment.hm8C6MUP.png",L=JSON.parse('{"title":"CodeDeploy","description":"","frontmatter":{"title":"CodeDeploy","author":"ChocolateAceCream","date":"2024/05/06 16:25","categories":["AWS"],"tags":["AWS","CI/CD","CodeDeploy"]},"headers":[],"relativePath":"courses/AWS/02-CI_CD_Tools/03-CodeDeploy.md","filePath":"courses/AWS/02-CI_CD_Tools/03-CodeDeploy.md","lastUpdated":1715121611000}'),C={name:"courses/AWS/02-CI_CD_Tools/03-CodeDeploy.md"},A={id:"aws-codedeploy",tabindex:"-1"},b=o("a",{class:"header-anchor",href:"#aws-codedeploy","aria-label":'Permalink to "AWS CodeDeploy <Badge text="CodeDeploy" type="warning" />"'},"​",-1),B=f('<h2 id="rolling-deployment" tabindex="-1">Rolling deployment <a class="header-anchor" href="#rolling-deployment" aria-label="Permalink to &quot;Rolling deployment&quot;">​</a></h2><p>Your production fleet will run both the new and existing software versions during the deployment process.</p><h4 id="pros" tabindex="-1">Pros <a class="header-anchor" href="#pros" aria-label="Permalink to &quot;Pros&quot;">​</a></h4><ul><li>zero downtime (If the upgrade failed)</li><li>lower overall risk of bringing down entire production env</li><li>minimize deployment costs</li></ul><h4 id="cons" tabindex="-1">Cons <a class="header-anchor" href="#cons" aria-label="Permalink to &quot;Cons&quot;">​</a></h4><ul><li>complexity increased since you need to handle two versions operating at once in the same env.</li><li>Rolling back to previous version is hard, either redeploy old version or fix bugs manually</li><li>take longer to deploy all hosts in large env</li></ul><p><img src="'+g+'" alt="Rolling deployment"></p><h2 id="blue-green-deployment" tabindex="-1">Blue/Green deployment <a class="header-anchor" href="#blue-green-deployment" aria-label="Permalink to &quot;Blue/Green deployment&quot;">​</a></h2><p>an entirely new environment containing the updated application is created, and traffic is shifted over to the new environment <img src="'+D+`" alt="blue_green_deployment"></p><h2 id="health-checks" tabindex="-1">Health Checks <a class="header-anchor" href="#health-checks" aria-label="Permalink to &quot;Health Checks&quot;">​</a></h2><p>determine if a deployment was successful or the app is working as intended.</p><h3 id="liveness-checks" tabindex="-1">Liveness checks <a class="header-anchor" href="#liveness-checks" aria-label="Permalink to &quot;Liveness checks&quot;">​</a></h3><ul><li>TCP port checks</li><li>HTTP 200 response checks</li><li>basic infra inspection, such as network reachability</li></ul><h3 id="local-health-checks" tabindex="-1">Local health checks <a class="header-anchor" href="#local-health-checks" aria-label="Permalink to &quot;Local health checks&quot;">​</a></h3><ul><li>Disk IO</li><li>proxy checks</li><li>monitoring daemons checks</li></ul><h3 id="dependency-health-checks" tabindex="-1">Dependency health checks <a class="header-anchor" href="#dependency-health-checks" aria-label="Permalink to &quot;Dependency health checks&quot;">​</a></h3><ul><li>update mechanism might be broken on a server so server can out of sync with its peers.</li><li>peer communication inability.</li><li>Deadlocks, memory leaks or state corruption bugs</li></ul><h3 id="anomaly-detection" tabindex="-1">Anomaly detection <a class="header-anchor" href="#anomaly-detection" aria-label="Permalink to &quot;Anomaly detection&quot;">​</a></h3><ul><li>clock skew: peer clock un-sync</li><li>peer running outdated code</li></ul><h2 id="deployment-configurations" tabindex="-1">Deployment Configurations <a class="header-anchor" href="#deployment-configurations" aria-label="Permalink to &quot;Deployment Configurations&quot;">​</a></h2><h4 id="codedeploy-predefined-deployment-configurations" tabindex="-1">CodeDeploy Predefined Deployment Configurations <a class="header-anchor" href="#codedeploy-predefined-deployment-configurations" aria-label="Permalink to &quot;CodeDeploy Predefined Deployment Configurations&quot;">​</a></h4><h5 id="amazon-ec2-and-on-premises" tabindex="-1">Amazon EC2 and on premises <a class="header-anchor" href="#amazon-ec2-and-on-premises" aria-label="Permalink to &quot;Amazon EC2 and on premises&quot;">​</a></h5><ul><li>CodeDeployDefault.AllAtOnce: Attempts to deploy an application revision to as many instances as possible at once</li><li>CodeDeployDefault.HalfAtATime: Deploys to up to half of the instances at a time (with fractions rounded down)</li><li>CodeDeployDefault.OneAtATime: Deploys the application revision to only one instance at a time Amazon ECS</li><li>CodeDeployDefault.ECSLinear10PercentEvery1Minutes: Shifts 10 percent of traffic every minute until all traffic is shifted</li><li>CodeDeployDefault.ECSLinear10PercentEvery3Minutes: Shifts 10 percent of traffic every 3 minutes until all traffic is shifted</li><li>CodeDeployDefault.ECSCanary10Percent5Minutes: Shifts 10 percent of traffic in the first increment, and the remaining 90 percent is deployed 5 minutes later</li><li>CodeDeployDefault.ECSCanary10Percent15Minutes: Shifts 10 percent of traffic in the first increment, and the remaining 90 percent is deployed 15 minutes later</li><li>CodeDeployDefault.ECSAllAtOnce: Shifts all traffic to the updated Amazon ECS container at once Lambda</li><li>CodeDeployDefault.LambdaLinear10PercentEvery1Minute: Shifts 10 percent of traffic every minute until all traffic is shifted</li><li>CodeDeployDefault.LambdaLinear10PercentEvery2Minutes: Shifts 10 percent of traffic every 2 minutes until all traffic is shifted</li><li>CodeDeployDefault.LambdaLinear10PercentEvery3Minutes: Shifts 10 percent of traffic every 3 minutes until all traffic is shifted</li><li>CodeDeployDefault.LambdaLinear10PercentEvery10Minutes: Shifts 10 percent of traffic every 10 minutes until all traffic is shifted</li><li>CodeDeployDefault.LambdaCanary10Percent5Minutes: Shifts 10 percent of traffic in the first increment, and the remaining 90 percent is deployed 5 minutes later</li><li>CodeDeployDefault.LambdaCanary10Percent10Minutes: Shifts 10 percent of traffic in the first increment, and the remaining 90 percent is deployed 10 minutes later</li><li>CodeDeployDefault.LambdaCanary10Percent15Minutes: Shifts 10 percent of traffic in the first increment, and the remaining 90 percent is deployed 15 minutes later</li><li>CodeDeployDefault.LambdaCanary10Percent30Minutes: Shifts 10 percent of traffic in the first increment, and the remaining 90 percent is deployed 30 minutes later</li><li>CodeDeployDefault.LambdaAllAtOnce: Shifts all traffic to the updated Lambda functions at once</li></ul><h2 id="deployment-types" tabindex="-1">Deployment Types <a class="header-anchor" href="#deployment-types" aria-label="Permalink to &quot;Deployment Types&quot;">​</a></h2><h3 id="blue-green-deployment-1" tabindex="-1">Blue/Green deployment <a class="header-anchor" href="#blue-green-deployment-1" aria-label="Permalink to &quot;Blue/Green deployment&quot;">​</a></h3><ul><li>testing on green env without disrupting the blue env</li><li>switching to green env with no downtime. It only requires the redirecting of user traffic</li><li>rollback from green to blue is easy</li></ul><h4 id="steps-for-blue-green-deployment-in-ec2" tabindex="-1">Steps for blue/green deployment in EC2 <a class="header-anchor" href="#steps-for-blue-green-deployment-in-ec2" aria-label="Permalink to &quot;Steps for blue/green deployment in EC2&quot;">​</a></h4><ol><li>create green env</li><li>deploy new version of app in green env</li><li>redirect traffic to green env</li><li>deregister blue env or keep it for other uses</li></ol><h4 id="steps-for-blue-green-deployment-on-lambda" tabindex="-1">Steps for blue/green deployment on Lambda <a class="header-anchor" href="#steps-for-blue-green-deployment-on-lambda" aria-label="Permalink to &quot;Steps for blue/green deployment on Lambda&quot;">​</a></h4><ul><li>no need for extra config, all lambda are deployed in blue/green manner</li><li>you can specify a lambda function that perform validation tests and choose the way traffic shifting occurs</li></ul><h4 id="steps-for-blue-green-deployment-on-ecs" tabindex="-1">Steps for blue/green deployment on ECS <a class="header-anchor" href="#steps-for-blue-green-deployment-on-ecs" aria-label="Permalink to &quot;Steps for blue/green deployment on ECS&quot;">​</a></h4><ul><li>traffic is shifted from the task set with original version of APP in ECS service to replacement task set in the same service</li><li>traffic shifting can be linear or canary through deployment config</li><li>load balancer are used to reroute traffic</li><li>can run validation tests with a test listener that used to serve traffic to the replacement task set</li></ul><h2 id="appspec" tabindex="-1">AppSpec <a class="header-anchor" href="#appspec" aria-label="Permalink to &quot;AppSpec&quot;">​</a></h2><p>The AppSpec file is used to manage each deployment as a series of lifecycle event hooks</p><h4 id="sample-files" tabindex="-1">sample files <a class="header-anchor" href="#sample-files" aria-label="Permalink to &quot;sample files&quot;">​</a></h4><ul><li>Amazon ECS</li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0.0</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">resources</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Specifies info about the ECS APP to deploy</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  ecs-service-specifications</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">hooks</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  deployment-lifecycle-event-mappings</span></span></code></pre></div><ul><li>Lambda</li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0.0</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">resources</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Specifies info about the lambda function to deploy</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  lambda-function-specifications</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">hooks</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  deployment-lifecycle-event-mappings</span></span></code></pre></div><ul><li>EC2 or on-premises</li></ul><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0.0</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">os</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">operating-system-name</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> # linux or windows</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">files</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  source-destination-files-mappings</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> #files that should be copied to the instance during the deployment&#39;s install event</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">permissions</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # which special permissions should be apply to the files that copied to the instance</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  permissions-specifications</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">hooks</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  deployment-lifecycle-event-mappings</span></span></code></pre></div><h3 id="lifecycle-hooks" tabindex="-1">LifeCycle hooks <a class="header-anchor" href="#lifecycle-hooks" aria-label="Permalink to &quot;LifeCycle hooks&quot;">​</a></h3><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0.0</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">Resources</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">TargetService</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      Type</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">AWS::ECS::Service</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      Properties</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">        TaskDefinition</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;arn:aws:ecs:us-east-1:111222333444:task-definition/my-task-definition-family-name:1&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">        LoadBalancerInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          ContainerName</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;SampleApplicationName&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          ContainerPort</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">80</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># Optional properties</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">        PlatformVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;LATEST&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">        NetworkConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">          AwsvpcConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            Subnets</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;subnet-1234abcd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;subnet-5678abcd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            SecurityGroups</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;sg-12345678&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">            AssignPublicIp</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;ENABLED&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">Hooks</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">BeforeInstall</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;LambdaFunctionToValidateBeforeInstall&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">AfterInstall</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;LambdaFunctionToValidateAfterTraffic&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">AfterAllowTestTraffic</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;LambdaFunctionToValidateAfterTestTrafficStarts&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">BeforeAllowTraffic</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;LambdaFunctionToValidateBeforeAllowingProductionTraffic&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">AfterAllowTraffic</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;LambdaFunctionToValidateAfterAllowingProductionTraffic&quot;</span></span></code></pre></div><ul><li>BeforeInstall: before ECS app is installed on the replacement task set</li><li>AfterInstall: after install but before it receives any traffic</li><li>AfterAllowTestTraffic: after app starts receiving traffic from the test listener, which runs validation tests to determine if the deployment continues.</li><li>BeforeAllowTraffic: after tests completed, but before production traffic is served</li><li>AfterAllowTraffic: after production traffic is served</li></ul><p><a href="../../../public/pdf/2024/05/07/AppSpec_Hooks_by_Deployment.pdf">AppSpec_Hooks_by_Deployment</a></p>`,45);function v(e,F,E,q,S,_){const r=a("Badge"),p=d,h=a("ClientOnly");return n(),k("div",null,[o("h1",A,[t("AWS CodeDeploy "),l(r,{text:"CodeDeploy",type:"warning"}),t(),b]),l(h,null,{default:y(()=>{var i,s;return[(((i=e.$frontmatter)==null?void 0:i.aside)??!0)&&(((s=e.$frontmatter)==null?void 0:s.showArticleMetadata)??!0)?(n(),u(p,{key:0,article:e.$frontmatter},null,8,["article"])):m("",!0)]}),_:1}),B])}const x=c(C,[["render",v]]);export{L as __pageData,x as default};
