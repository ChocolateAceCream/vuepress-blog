import{_ as d}from"./chunks/ArticleMetadata.B8N5n3Xc.js";import{_ as g,m as t,a as A,e as l,x as n,u as h,B as y,ah as D,o as k,p as o,q as C}from"./chunks/framework.BuAcqOzq.js";import"./chunks/theme.3XZjQSla.js";const H=JSON.parse('{"title":"http 1.1","description":"","frontmatter":{"title":"http 1.1","author":"ChocolateAceCream","date":"2024/10/07 19:00","isTop":false,"categories":["backend"],"tags":["Go"]},"headers":[],"relativePath":"categories/backend/2024/10/07/http.md","filePath":"categories/backend/2024/10/07/http.md","lastUpdated":1728430861000}'),F={name:"categories/backend/2024/10/07/http.md"},B={id:"http-1-1",tabindex:"-1"},c=l("a",{class:"header-anchor",href:"#http-1-1","aria-label":'Permalink to "http 1.1 <Badge text="Go" type="warning" />"'},"â€‹",-1),u=D(`<p>a simple http server and client call implement by go is like this</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">fmt</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">net</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">net/http</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	http.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Handle</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;GET /test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, http.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">HandlerFunc</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">w</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> http</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">ResponseWriter</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">r</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> *</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">http</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Request</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		w.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Write</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">([]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		w.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Write</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">([]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot; World!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	}))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	go</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> http.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">ListenAndServe</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;:8000&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">nil</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	conn, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> net.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Dial</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;tcp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;localhost:8000&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">		panic</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(err)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	defer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> conn.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Close</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	_, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> conn.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Write</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">([]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;GET /test HTTP/1.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\r\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">Host: localhost:8000</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\r\\n\\r\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">		panic</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(err)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	buf </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> make</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">([]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1024</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	n, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> conn.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Read</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(buf)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">		panic</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(err)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(buf[:n]))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>which output like this:</p><hr><p>HTTP/1.1 200 OK Date: Sun, 06 Oct 2024 14:51:13 GMT Content-Length: 12 Content-Type: text/plain; charset=utf-8</p><p>Hello world!</p><hr><p><em><strong>Several things to notice here</strong></em></p><ol><li>if you want to set customized headers, you have to do it before and w.Write() is called. e.g.</li></ol><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">w.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Write</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">([]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">w.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Header</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Add</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;asdasd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;asdfasdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">w.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Write</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">([]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot; World!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span></code></pre></div><p>wont work but</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">w.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Header</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Add</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;asdasd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;asdfasdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">w.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Write</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">([]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">w.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Write</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">([]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot; World!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span></code></pre></div><p>is working</p><ol start="2"><li><p>if the response is small enough to fit in one &quot;chunking buffer&quot;, the length can be calculated and sent all at once. if the response length &gt; buffer size(default 4kb, but you can define yourself), the response is sent in chunks and each chunk length is calculated before writing the chunk into response</p></li><li><p>if you want to add header after response body is written, you can use trailer header</p></li></ol><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">w.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Header</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Set</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Trailer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;my-trailer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">w.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Write</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">([]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">w.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Write</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">([]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot; World!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">w.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Header</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Add</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;my-trailer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;asdfasdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><p>However, in Go&#39;s http handlers, adding trailers will also automatically make the response chunked even if it normally wouldn&#39;t be.</p>`,16);function E(s,m,q,f,b,_){const p=t("Badge"),e=d,r=t("ClientOnly");return k(),A("div",null,[l("h1",B,[n("http 1.1 "),h(p,{text:"Go",type:"warning"}),n(),c]),h(r,null,{default:y(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(k(),o(e,{key:0,article:s.$frontmatter},null,8,["article"])):C("",!0)]}),_:1}),u])}const W=g(F,[["render",E]]);export{H as __pageData,W as default};
