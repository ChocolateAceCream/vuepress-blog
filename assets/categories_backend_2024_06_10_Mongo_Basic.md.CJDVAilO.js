import{_ as d}from"./chunks/ArticleMetadata.4tiueInE.js";import{_ as o,m as t,a as g,e as l,x as n,u as e,B as y,ah as c,o as h,p as A,q as D}from"./chunks/framework.BuAcqOzq.js";import"./chunks/theme.B531u9tI.js";const O=JSON.parse('{"title":"Mongo Basic","description":"","frontmatter":{"title":"Mongo Basic","author":"ChocolateAceCream","date":"2024/06/10 19:00","isTop":false,"categories":["backend"],"tags":["Go","MongoDB","NoSQL"]},"headers":[],"relativePath":"categories/backend/2024/06/10/Mongo_Basic.md","filePath":"categories/backend/2024/06/10/Mongo_Basic.md","lastUpdated":1718152959000}'),C={name:"categories/backend/2024/06/10/Mongo_Basic.md"},u={id:"mongo-basic",tabindex:"-1"},F=l("a",{class:"header-anchor",href:"#mongo-basic","aria-label":'Permalink to "Mongo Basic <Badge text="MongoDB" type="warning" />"'},"​",-1),B=c(`<h2 id="main-concepts" tabindex="-1">Main Concepts <a class="header-anchor" href="#main-concepts" aria-label="Permalink to &quot;Main Concepts&quot;">​</a></h2><h3 id="documents" tabindex="-1">Documents <a class="header-anchor" href="#documents" aria-label="Permalink to &quot;Documents&quot;">​</a></h3><p>every piece of records, the basic unit of records, like rows in mysql</p><h3 id="collection" tabindex="-1">Collection <a class="header-anchor" href="#collection" aria-label="Permalink to &quot;Collection&quot;">​</a></h3><p>a collection of documents, like the table in mysql</p><h2 id="bulk-operation" tabindex="-1">Bulk Operation <a class="header-anchor" href="#bulk-operation" aria-label="Permalink to &quot;Bulk Operation&quot;">​</a></h2><h3 id="execution-order" tabindex="-1">Execution order <a class="header-anchor" href="#execution-order" aria-label="Permalink to &quot;Execution order&quot;">​</a></h3><p>can be set by passing bulkOptions to BulkWrite(), default is true, which means each operation inside a bulk is executed sequentially in the order they are provided.</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">bulkOptions </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> options.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">BulkWrite</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">SetOrdered</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">result, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> collection.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">BulkWrite</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(context.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Background</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(), models, bulkOptions)</span></span></code></pre></div><h3 id="benefits-of-using-bulk-operations" tabindex="-1">Benefits of using bulk operations <a class="header-anchor" href="#benefits-of-using-bulk-operations" aria-label="Permalink to &quot;Benefits of using bulk operations&quot;">​</a></h3><ul><li>Efficiency: since bulk operations wraps multiple operations inside one http request, it reduced the network round-trips between app and db</li></ul><h2 id="common-operations" tabindex="-1">Common Operations <a class="header-anchor" href="#common-operations" aria-label="Permalink to &quot;Common Operations&quot;">​</a></h2><h3 id="replace" tabindex="-1">Replace <a class="header-anchor" href="#replace" aria-label="Permalink to &quot;Replace&quot;">​</a></h3><p>Replace operations remove all existing fields except for _id in a document and substitute the deleted fields with the new fields and values you specify. P.S. the field that not present in new document will be replaced with its type&#39;s default value, e.g. 0 for int and &quot;&quot; for string. So it&#39;s better approach to choose UpdateOne in such scenario</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">u </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">UserCollection</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">ReplaceUser</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">user</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> User</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	filter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> bson</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: name}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	replacement </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> user</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	r, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> u.Collection.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">ReplaceOne</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(context.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Background</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(), filter, replacement)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Printf</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Matched </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">%v</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> documents and replaced </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">%v</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> documents.</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, r.MatchedCount, r.ModifiedCount)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> err</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h3 id="update" tabindex="-1">Update <a class="header-anchor" href="#update" aria-label="Permalink to &quot;Update&quot;">​</a></h3><p>Update operations change the fields that you specify while leaving other fields and values unchanged.</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">u </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">UserCollection</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">UpdateUser</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	filter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> bson</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: name}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	update </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> bson</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;$set&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">bson</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;created_at&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: time.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Now</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()}}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	r, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> u.Collection.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">UpdateOne</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(context.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Background</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(), filter, update)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Printf</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Matched </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">%v</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> documents and updated </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">%v</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> documents.</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, r.MatchedCount, r.ModifiedCount)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> err</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h3 id="delete" tabindex="-1">Delete <a class="header-anchor" href="#delete" aria-label="Permalink to &quot;Delete&quot;">​</a></h3><p>remove documents from your MongoDB collections</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">u </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">UserCollection</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">DeleteUser</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	filter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> bson</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: name}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	r, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> u.Collection.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">DeleteOne</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(context.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Background</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(), filter)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Printf</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Delete </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">%v</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> documents.</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, r.DeletedCount)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> err</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><h2 id="bson" tabindex="-1">BSON <a class="header-anchor" href="#bson" aria-label="Permalink to &quot;BSON&quot;">​</a></h2><ul><li>Binary JSON, human unreadable but efficient in storing and parsing.</li><li>support Date, Binary data type, allows more complex data structures</li></ul><h3 id="data-types-in-go" tabindex="-1">Data types in Go <a class="header-anchor" href="#data-types-in-go" aria-label="Permalink to &quot;Data types in Go&quot;">​</a></h3><ul><li>D: An ordered representation of a BSON document (slice)</li><li>M: An unordered representation of a BSON document (map)</li><li>A: An ordered representation of a BSON array</li><li>E: A single element inside a D type</li></ul><h3 id="struct-tags" tabindex="-1">Struct Tags <a class="header-anchor" href="#struct-tags" aria-label="Permalink to &quot;Struct Tags&quot;">​</a></h3><ul><li>omitempty: The field will not be marshalled if it is set to the zero value corresponding to the field type. (Only applied when marshalling)</li><li>minsize: If the field is type int64, uint, uint32, or uint64 and the value of the field can fit in a signed int32, the field will be serialized as a BSON int32 rather than a BSON int64. If the value can&#39;t fit in a signed int32, this tag is ignored.</li><li>truncate: when unmarshalle float/double type field from BSON to a non-float numeric type, with this tag, value will be truncated at the decimal point.</li><li>inline: If the field type is a struct or map field, the field will be flattened when marshalling and unflattened when unmarshalling. e.g.</li></ul><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Address</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> struct</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">       Street </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">       City   </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">       State  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">string</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">type</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Student</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> struct</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">       FirstName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">string</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  \`bson:&quot;first_name,omitempty&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">       LastName  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">string</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">  \`bson:&quot;last_name,omitempty&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">       Address   </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Address</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> \`bson:&quot;inline&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">       Age       </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">int</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">coll </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> client.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Database</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;db&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Collection</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;students&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">address1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Address</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{ </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;1 Lakewood Way&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Elwood City&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;PA&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">student1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> Student</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{ FirstName : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Arthur&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, Address : address1, Age : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">_, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> coll.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">InsertOne</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(context.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">TODO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(), student1)</span></span></code></pre></div><p>The corresponding BSON representation looks like this:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">  &quot;_id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">ObjectId(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;...&quot;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FF938A;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">)</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">  &quot;first_name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Arthur&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">  &quot;street&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;1 Lakewood Way&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">  &quot;city&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Elwood City&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">  &quot;state&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;PA&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#8DDB8C;">  &quot;age&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">8</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div>`,30);function m(s,E,f,b,q,v){const k=t("Badge"),p=d,r=t("ClientOnly");return h(),g("div",null,[l("h1",u,[n("Mongo Basic "),e(k,{text:"MongoDB",type:"warning"}),n(),F]),e(r,null,{default:y(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(h(),A(p,{key:0,article:s.$frontmatter},null,8,["article"])):D("",!0)]}),_:1}),B])}const M=o(C,[["render",m]]);export{O as __pageData,M as default};
