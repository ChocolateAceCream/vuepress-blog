import{_ as r}from"./chunks/ArticleMetadata.CiIHYunG.js";import{_ as d,m as n,a as g,e as h,x as e,u as t,B as c,ah as y,o as l,p as A,q as D}from"./chunks/framework.BuAcqOzq.js";import"./chunks/theme.D16Q-TM1.js";const C="/vuepress-blog/assets/google.drawio.Uc2bjG_o.png",O=JSON.parse('{"title":"Google login","description":"","frontmatter":{"title":"Google login","author":"ChocolateAceCream","date":"2025/03/07 10:24","isTop":true,"categories":["System Design"],"tags":["Google","Oauth2"]},"headers":[],"relativePath":"courses/SystemDesign/01-DesignPattern/02-GoogleLogin.md","filePath":"courses/SystemDesign/01-DesignPattern/02-GoogleLogin.md","lastUpdated":1741632211000}'),F={name:"courses/SystemDesign/01-DesignPattern/02-GoogleLogin.md"},u={id:"google-oauth2-login",tabindex:"-1"},B=h("a",{class:"header-anchor",href:"#google-oauth2-login","aria-label":'Permalink to "Google Oauth2 login <Badge text="Google" type="warning" />"'},"​",-1),m=y('<p>Design a google oauth2 login function that involved with frontend, backend and google</p><h2 id="process-flow-and-key-steps" tabindex="-1">Process flow and key steps <a class="header-anchor" href="#process-flow-and-key-steps" aria-label="Permalink to &quot;Process flow and key steps&quot;">​</a></h2><p><img src="'+C+`" alt="regression_testing.png"></p><ol><li>frontend open a new window and call google login with params client_id and redirect_uri (which is a backend api endpoint to receive auth result from google)</li><li>if user login valid by google, google will call the redirect_uri of backend, so backend will receive a temp code.</li><li>With that temp code, backend know user is authed and will call google with that code to fetch user info (optionally)</li><li>now backend will redirect to frontend page that only used to receive auth result, extract the info from url(optional), post a message and then close the window</li><li>on frontend login page, through event listener, capture the user info and navigate to home page.</li></ol><h2 id="things-to-notice" tabindex="-1">Things to notice <a class="header-anchor" href="#things-to-notice" aria-label="Permalink to &quot;Things to notice&quot;">​</a></h2><ol><li>Literally, previous step 1 ~ 5 used one single request, which is redirect several times between frontend, backend and google. So the new window opened in step 1 is the same window closed at step 4.</li><li>remember to setup Authorized redirect URIs through google cloud. So only registered urls can be called by google after user login success.</li><li>also remember to register your frontend host address, so only login request from that address will get processed by google. you can setup a localhost for testing purpose, but remember to remove it after.</li><li>literally the whole process can be happened just between frontend and google if you store the google client_secret in frontend (potential security risk here).</li><li>When a page open a new window, that new window can communicate with its parent window using event listener and listen to &#39;message&#39; field</li></ol><h2 id="key-codes-block" tabindex="-1">Key codes block <a class="header-anchor" href="#key-codes-block" aria-label="Permalink to &quot;Key codes block&quot;">​</a></h2><ul><li>communication between new opened window and login page with window.opener.postMessage and window.addEventListener</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// login page</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> handleGoogleLogin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> async</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> googleClientId</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">VITE_APP_GOOGLE_CLIENT_ID</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> redirectUri</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.env.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">VITE_APP_GOOGLE_OAUTH_REDIRECT_URI</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> scope</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> encodeURIComponent</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;profile email&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> authUrl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> \`https://accounts.google.com/o/oauth2/v2/auth?client_id=\${</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">googleClientId</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">}&amp;redirect_uri=\${</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">redirectUri</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">}&amp;response_type=code&amp;scope=\${</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">scope</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">}\`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">open</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(authUrl, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;_blank&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;width=500,height=600&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">useEffect</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> handleOAuthCallback</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> async</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">event</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> MessageEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;----event--&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, event)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (event.origin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!==</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> window.location.origin) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">warn</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;untrusted origin&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, event.origin)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">      return</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    const</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">status</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> event.data</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (status </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;success&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">      navigate</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;login failed&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;message&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, handleOAuthCallback)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  // remove event listener using clean up function</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">removeEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;message&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, handleOAuthCallback, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}, [])</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// oauth result page</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">useEffect</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  // might need to extract params like this:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  /*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  const params = new URLSearchParams(window.location.search)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  const token = params.get(&#39;token&#39;)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  const result = params.get(&#39;result&#39;)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  if (window.opener &amp;&amp; result === &#39;success&#39;) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    window.opener.postMessage(</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">      { token, status: &#39;success&#39; },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">      window.location.origin</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    )</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (window.opener) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    window.opener.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">postMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">({ status: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;success&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> }, window.location.origin)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}, [])</span></span></code></pre></div><p>a little more details about <code>window.opener.postMessage</code></p><ul><li>it allows a child window (popup) to send a message back to the parent window securely</li><li>window.location.origin return the protocol, hostname and port of the current web page. So it&#39;s good practice to use it as target origin (second params send to window.opener.postMessage)</li><li>always remember to validate the event origin.</li></ul>`,12);function w(s,E,_,f,b,v){const p=n("Badge"),k=r,o=n("ClientOnly");return l(),g("div",null,[h("h1",u,[e("Google Oauth2 login "),t(p,{text:"Google",type:"warning"}),e(),B]),t(o,null,{default:c(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(l(),A(k,{key:0,article:s.$frontmatter},null,8,["article"])):D("",!0)]}),_:1}),m])}const L=d(F,[["render",w]]);export{O as __pageData,L as default};
