import{_ as A}from"./chunks/ArticleMetadata.B8N5n3Xc.js";import{_ as c,m as k,a as y,e as n,x as h,u as t,B as r,ah as C,o as e,p as d,q as o}from"./chunks/framework.BuAcqOzq.js";import"./chunks/theme.3XZjQSla.js";const O=JSON.parse('{"title":"Common operator & commands","description":"","frontmatter":{"title":"Common operator & commands","author":"ChocolateAceCream","date":"2024/07/24 22:24","isTop":true,"categories":["PostgreSQL"],"tags":["PostgreSQL"]},"headers":[],"relativePath":"courses/PostgreSQL/01-Basic/01-basic_commands.md","filePath":"courses/PostgreSQL/01-Basic/01-basic_commands.md","lastUpdated":1736047985000}'),u={name:"courses/PostgreSQL/01-Basic/01-basic_commands.md"},D={id:"common-operator-commands",tabindex:"-1"},F=n("a",{class:"header-anchor",href:"#common-operator-commands","aria-label":'Permalink to "Common operator & commands <Badge text="PostgreSQL" type="warning" />"'},"​",-1),E=n("h1",{id:"function-and-trigger",tabindex:"-1"},[h("Function and trigger "),n("a",{class:"header-anchor",href:"#function-and-trigger","aria-label":'Permalink to "Function and trigger"'},"​")],-1),m=C(`<h2 id="build-in-functions" tabindex="-1">build-in functions <a class="header-anchor" href="#build-in-functions" aria-label="Permalink to &quot;build-in functions&quot;">​</a></h2><h3 id="type-casting" tabindex="-1">Type Casting <a class="header-anchor" href="#type-casting" aria-label="Permalink to &quot;Type Casting&quot;">​</a></h3><p>syntax is <code>::TARGET_TYPE</code> e.g.</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">update</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> account</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  set</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> balance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> balance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 900</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">money</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">--   or you can do this</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">--   set balance = balance - &#39;900&#39;::money</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  where</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;kevin&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> and</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;checking&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span></code></pre></div><p>this will casting 900 to money type.</p><h3 id="random" tabindex="-1">random() <a class="header-anchor" href="#random" aria-label="Permalink to &quot;random()&quot;">​</a></h3><p><code>random() </code> generate random number from 0 ~ 1 e.g.</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">WITH</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> x (a,b) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    SELECT</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">			trunc(random() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- Generate a random number once</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">			trunc(random() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">integer</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  -- Generate a random number once</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    FROM</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> generate_series</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)       </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- Create 10 rows</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">insert into</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> account </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">select</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> x</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;saving&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">b</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">::</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">money</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> x;</span></span></code></pre></div><h3 id="generate-series-start-end-step" tabindex="-1">generate_series(start,end,step) <a class="header-anchor" href="#generate-series-start-end-step" aria-label="Permalink to &quot;generate_series(start,end,step)&quot;">​</a></h3><ul><li>step is optional generate a series given start point, end point and steps in between.</li></ul><h3 id="vacuum" tabindex="-1">vacuum <a class="header-anchor" href="#vacuum" aria-label="Permalink to &quot;vacuum&quot;">​</a></h3><p>clean up dead tuples manually. useful when high write activity involved.</p><p>dead tuples are generated because of pgsql&#39;s MVCC (multi-version concurrency control). This model ensures data consistency and isolation by maintaining multiple versions of a row, allowing transactions to work concurrently without locking.</p><h3 id="analyze" tabindex="-1">analyze <a class="header-anchor" href="#analyze" aria-label="Permalink to &quot;analyze&quot;">​</a></h3><p>collect statistics about the table&#39;s data and stores them in the system catalog. These statistics are used by the query planner to make efficient query execution decisions.</p><p>e.g.</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">vacuum analyze t;</span></span></code></pre></div><p><strong>vacuum analyze is useful when</strong></p><ol><li>after large updates, inserts, or deletes</li><li>query performance has degraded due to inaccurate table statistics or table bloat</li></ol><h3 id="string-concatenation" tabindex="-1">string concatenation <a class="header-anchor" href="#string-concatenation" aria-label="Permalink to &quot;string concatenation&quot;">​</a></h3><ol><li>use || to concatenate two strings. e.g. match val column with string str1str2str3</li></ol><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> t </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> val </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;str1&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ||</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;str2&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ||</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;str3&#39;</span></span></code></pre></div><ol start="2"><li>use concat() e.g. previous example can be rewrite using concat() as:</li></ol><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">select</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> t </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> val </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> concat</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;str1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;str2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;str3&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><ol start="3"><li>use concat_ws(), first param is the separator e.g.</li></ol><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> concat_ws(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;, &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;apple&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;banana&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;pear&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- Result: &#39;apple, banana, pear&#39;</span></span></code></pre></div><h3 id="substring" tabindex="-1">substring() <a class="header-anchor" href="#substring" aria-label="Permalink to &quot;substring()&quot;">​</a></h3><ol><li>substring(str, from)</li></ol><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> SUBSTRING</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;user@example.com&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> POSITION(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;@&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> IN</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;user@example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- Result: &#39;example.com&#39;</span></span></code></pre></div><ol start="2"><li>substring(str, from, for)</li></ol><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">select</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> substring</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;123456&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> from</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> for</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- Result: &#39;123&#39;</span></span></code></pre></div><h3 id="now" tabindex="-1">now() <a class="header-anchor" href="#now" aria-label="Permalink to &quot;now()&quot;">​</a></h3><p>return the current timestamp, pgsql specific, the DB standard command is CURRENT_TIMESTAMP</p><h3 id="to-char" tabindex="-1">TO_CHAR <a class="header-anchor" href="#to-char" aria-label="Permalink to &quot;TO_CHAR&quot;">​</a></h3><p>used to format a number or date/time value to a string given the desired format. e.g.</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">TO_CHAR(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">value</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,format)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- value: date/time or numeric value</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- format: format template</span></span></code></pre></div><h4 id="fill-mode-fm" tabindex="-1">Fill Mode (FM) <a class="header-anchor" href="#fill-mode-fm" aria-label="Permalink to &quot;Fill Mode (FM)&quot;">​</a></h4><p>in TO_CHAR(), FM modifier is used to create more readable outputs by trimming spaces and leading zeros. e.g.</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> TO_CHAR(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">123</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">4500</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;9990.999&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- Output: &#39; 123.450&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> TO_CHAR(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">123</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">4500</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;FM9990.999&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- Output: &#39;123.45&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> TO_CHAR(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">12345</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">67</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;FM999G999D99&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- Output: &#39;12,345.67&#39;</span></span></code></pre></div><p>P.S. be careful for overflows, once the given input value exceeds the format length, result could be ####.##. P.S.2 FM will automatically round the input and then trim the tailing/leading 0s</p><h4 id="time-formatting" tabindex="-1">Time formatting <a class="header-anchor" href="#time-formatting" aria-label="Permalink to &quot;Time formatting&quot;">​</a></h4><p>e.g.</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> TO_CHAR(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">NOW</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(), </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;YYYY-MM-DD&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);  </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- Output: &#39;2024-07-28&#39;</span></span></code></pre></div><h5 id="where-fm-works-in-formatting-date-time" tabindex="-1">Where FM works in formatting date/time <a class="header-anchor" href="#where-fm-works-in-formatting-date-time" aria-label="Permalink to &quot;Where FM works in formatting date/time&quot;">​</a></h5><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> TO_CHAR(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DATE</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;2024-01-28&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Month DD, YYYY&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- Output: &#39;January   28, 2024&#39;</span></span></code></pre></div><p>since TO_CHAR() by default format &#39;Month&#39; with a Fixed-width formatting approach, which ensures that all month names take up the same amount of space (which is the length of longest month name plus one space. len(september) + 1 = 10, which can be helpful for tabular displays). That&#39;s where FM can be used if we don&#39;t want the default format</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> TO_CHAR(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">DATE</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;2024-07-28&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;FMMonth DD, YYYY&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">-- Output: &#39;July 28, 2024&#39;</span></span></code></pre></div><h3 id="collate" tabindex="-1">COLLATE <a class="header-anchor" href="#collate" aria-label="Permalink to &quot;COLLATE&quot;">​</a></h3><p>This key word is used to tell PG how to compare/sort string in a string column.</p><p>usage:</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> names_accent_sensitive</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> VARCHAR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> COLLATE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> pg_catalog.</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;default&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span></code></pre></div><p>using pg_catalog.&quot;default&quot; will make sure same approach is used when compare string.</p><p>other options are:</p><ul><li>case-insensitive</li></ul><blockquote><p>name VARCHAR COLLATE &quot;en_US.utf8&quot;</p></blockquote><ul><li>Spanish language, where accents are considered, and sorting reflects this.</li></ul><blockquote><p>name VARCHAR COLLATE &quot;es_ES.utf8&quot;</p></blockquote><ul><li>Case-Insensitive Collation</li></ul><blockquote><p>name VARCHAR COLLATE &quot;C&quot;</p></blockquote><h3 id="on-conflict" tabindex="-1">ON CONFLICT <a class="header-anchor" href="#on-conflict" aria-label="Permalink to &quot;ON CONFLICT&quot;">​</a></h3><p>sometimes when insert a record into table, you need to check the constrains such as unique keys. That&#39;s where <strong>ON CONFLICT</strong> is useful.</p><p>For example, if I want to insert a new user record, but the email already exist and it has unique constrain, I might want to just update the rest of fields.</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INSERT INTO</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> users (username, email)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ($</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, $</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ON</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> CONFLICT (email) DO </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">UPDATE</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SET</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> EXCLUDED</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">username</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span></code></pre></div><ul><li>EXCLUDED refer to the values that were originally provided for the insert.</li><li>ON CONFLICT (email): Specifies that if there&#39;s a conflict (i.e., a record with the same email already exists), the operation should perform an update instead of inserting a new record.</li><li>DO UPDATE: Specifies the columns to update in case of a conflict.</li></ul><h2 id="window-functions" tabindex="-1">Window Functions <a class="header-anchor" href="#window-functions" aria-label="Permalink to &quot;Window Functions&quot;">​</a></h2><p>window functions perform calculations across a specified set of rows, known as &quot;window&quot;, from a query and return a single value related to the current row. e.g. calculate total sales amount for each department</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> t.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">sum</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">t</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">sales_amount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">over</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">partition</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> by</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> t</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">department</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> department_total</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> sales </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> t</span></span></code></pre></div><p>e.g.2 calculate sales&#39; rank in each department</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> t.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">rank</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">over</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">partition</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> by</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> t</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">department</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> order by</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> sales_amount </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">desc</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> dept_rank</span></span></code></pre></div><p>common types of window functions include ranking functions, aggregate functions, offset functions and distribution functions.</p><h3 id="ranking-functions" tabindex="-1">ranking functions <a class="header-anchor" href="#ranking-functions" aria-label="Permalink to &quot;ranking functions&quot;">​</a></h3><ul><li>ROW_NUMBER(): give unique identify rows within a group or order data without any gaps e.g.</li></ul><blockquote><p>row_number() OVER (partition by p.department ) AS row_n</p></blockquote><ul><li>RANK(): assigns rank with gaps for ties. (resulted rows rank like 1,1,3,3,5)</li><li>DENSE_RANK(): assigns rank without gaps for ties (resulted rows rank like 1,1,2,2,3)</li><li>NTILE(n): divides rows into n approximately equal groups. e.g. ntile(4) can get top 25% and bottom 25% of partition</li></ul><h3 id="offset-functions" tabindex="-1">offset functions <a class="header-anchor" href="#offset-functions" aria-label="Permalink to &quot;offset functions&quot;">​</a></h3><p>Offset functions allow access to data from other rows in relation to the current row. They are used when you need to compare values between rows or when you run time-series analysis or trend detection.</p><ul><li>LAG(): Access data from a previous row e.g.</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> P</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	LAG</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ( </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">P</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">sales_amount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">OVER</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ( </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ORDER BY</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> P</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">sale_person_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> pre_amount,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	p</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">sales_amount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> LAG</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ( </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">P</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">sales_amount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">OVER</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ( </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ORDER BY</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> P</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">sale_person_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> diff_from_prev</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	promo_sales </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> P</span></span></code></pre></div><ul><li>LEAD(): Access data from a subsequent (next) row</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> P</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	LEAD</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ( </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">P</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">sales_amount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">OVER</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ( </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ORDER BY</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> P</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">sale_person_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> next_amount,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	p</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">sales_amount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> LEAD</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ( </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">P</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">sales_amount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">OVER</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ( </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ORDER BY</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> P</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">sale_person_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> diff_from_next</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	promo_sales </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> P</span></span></code></pre></div><ul><li>FIRST_VALUE(): Get first value in an ordered set</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> P</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	FIRST_VALUE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ( </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">P</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">sales_amount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">OVER</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ( </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ORDER BY</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> P</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">sale_person_id</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> first_val</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	promo_sales </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> P</span></span></code></pre></div><ul><li>LAST_VALUE(): Get last value in an ordered set</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> P</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	LAST_VALUE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ( </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">P</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">sales_amount</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">OVER</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ( </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">partition</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> by</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> department </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ORDER BY</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> P</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">sale_person_id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ROWS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> BETWEEN</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> UNBOUNDED</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PRECEDING</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> AND</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> UNBOUNDED</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> FOLLOWING</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> last_val</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	promo_sales </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> P</span></span></code></pre></div><p>p.s. last_val() usage is different compared to others, because the default frame is RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW. so it always return current row as it&#39;s the last row in the frame. So in order to use it properly, we need explicitly define the window frame as ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING, which include all rows from the first to the last in the ordered partition</p><h3 id="distribution-functions" tabindex="-1">Distribution Functions <a class="header-anchor" href="#distribution-functions" aria-label="Permalink to &quot;Distribution Functions&quot;">​</a></h3><p>Distribution functions calculate the relative position of a value within a group of values and also help you understand the distribution of values.</p><ul><li>PERCENT_RANK(): Calculates the percentile rank of a row, usually used to calculate bottom 25%, top 25% etc... p.s. the percent_rank() is calculated based on DENSE_RANK() of row in a partition.</li></ul><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> P</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">	PERCENT_RANK</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">OVER</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ( </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">partition</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> by</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> p</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">department</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> order BY</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> p</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">sales_amount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> asc</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> par_rank</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FROM</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	promo_sales </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> P</span></span></code></pre></div><ul><li><p>CUME_DIST(): Calculates the cumulative distribution of a value For example: The first row (100): 1 / 5 = 0.2 (1 row out of 5 has a value &lt;= 100) The second row (150): 2 / 5 = 0.4 (2 rows out of 5 have values &lt;= 150) The last row (300): 5 / 5 = 1.0 (all 5 rows have values &lt;= 300)</p></li><li><p>PERCENTILE_CONT(): Calculates a continuous percentile value</p></li><li><p>PERCENTILE_DISC(): Calculates a discrete percentile value p.s. it only can be applied to aggregated functions and not window functions</p></li></ul><h2 id="triggers" tabindex="-1">Triggers <a class="header-anchor" href="#triggers" aria-label="Permalink to &quot;Triggers&quot;">​</a></h2><h3 id="creation" tabindex="-1">Creation <a class="header-anchor" href="#creation" aria-label="Permalink to &quot;Creation&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE OR REPLACE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> FUNCTION</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> update_updated_at_column</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">RETURNS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> TRIGGER </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">AS</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> $$</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEGIN</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    NEW</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">updated_at</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> CURRENT_TIMESTAMP;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    RETURN</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> NEW;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">END</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$$ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">LANGUAGE</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> plpgsql;</span></span></code></pre></div><h3 id="usage" tabindex="-1">usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;usage&quot;">​</a></h3><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> TRIGGER</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> update_users_updated_at</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">BEFORE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> UPDATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ON</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> users</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">FOR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> EACH </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ROW</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">EXECUTE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> FUNCTION</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> update_updated_at_column();</span></span></code></pre></div><h2 id="constraints" tabindex="-1">Constraints <a class="header-anchor" href="#constraints" aria-label="Permalink to &quot;Constraints&quot;">​</a></h2><p>A constraint is a rule applied to a column (or columns) in a table to enforce data integrity and consistency. Constraints can ensure that data entered into a table adheres to specific rules, such as uniqueness, data type, or value ranges.</p><h3 id="foreign-key" tabindex="-1">Foreign key <a class="header-anchor" href="#foreign-key" aria-label="Permalink to &quot;Foreign key&quot;">​</a></h3><p>A foreign key is a specific type of constraint that enforces a link between two tables. It ensures that the value in a column (or a set of columns) in one table matches the value in a column in another table, thereby establishing a relationship between the tables.</p><h4 id="one-to-one" tabindex="-1">one to one <a class="header-anchor" href="#one-to-one" aria-label="Permalink to &quot;one to one&quot;">​</a></h4><p>put foreign key on either table is sufficient.</p><h4 id="one-to-many" tabindex="-1">one to many <a class="header-anchor" href="#one-to-many" aria-label="Permalink to &quot;one to many&quot;">​</a></h4><p>put foreign key on many side of table</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> departments</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SERIAL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> employees</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SERIAL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    department_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    FOREIGN KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (department_id) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">REFERENCES</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> departments(id)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span></code></pre></div><h4 id="many-to-many" tabindex="-1">many to many <a class="header-anchor" href="#many-to-many" aria-label="Permalink to &quot;many to many&quot;">​</a></h4><p>put foreign key on joined table with primary key of both tables</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> students</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SERIAL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> courses</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">SERIAL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    title </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> enrollments</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    student_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    course_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (student_id, course_id),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    FOREIGN KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (student_id) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">REFERENCES</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> students(id),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    FOREIGN KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (course_id) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">REFERENCES</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> courses(id)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">);</span></span></code></pre></div>`,107);function B(s,b,f,v,_,q){const g=k("Badge"),l=A,p=k("ClientOnly");return e(),y("div",null,[n("h1",D,[h("Common operator & commands "),t(g,{text:"PostgreSQL",type:"warning"}),h(),F]),t(p,null,{default:r(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(e(),d(l,{key:0,article:s.$frontmatter},null,8,["article"])):o("",!0)]}),_:1}),E,t(p,null,{default:r(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(e(),d(l,{key:0,article:s.$frontmatter},null,8,["article"])):o("",!0)]}),_:1}),m])}const P=c(u,[["render",B]]);export{O as __pageData,P as default};
