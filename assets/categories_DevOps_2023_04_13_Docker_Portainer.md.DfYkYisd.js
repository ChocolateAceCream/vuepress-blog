import{_ as C}from"./chunks/ArticleMetadata.DiODWuei.js";import{_ as y,m as r,a as u,e as s,x as i,u as n,B as l,ah as c,o as h,p as o,q as d}from"./chunks/framework.BuAcqOzq.js";import"./chunks/theme.Bdn3vnhR.js";const m="/vuepress-blog/assets/1.BORlrkM-.png",D="/vuepress-blog/assets/2.KBVUxPRn.png",V=JSON.parse('{"title":"Portainer TLS connection","description":"","frontmatter":{"title":"Portainer TLS connection","author":"ChocolateAceCream","date":"2023/04/13 19:00","isTop":false,"categories":["DevOps"],"tags":["Portainer","Docker","TLS"]},"headers":[],"relativePath":"categories/DevOps/2023/04/13/Docker_Portainer.md","filePath":"categories/DevOps/2023/04/13/Docker_Portainer.md","lastUpdated":1714717174000}'),v={name:"categories/DevOps/2023/04/13/Docker_Portainer.md"},b={id:"portainer-tls-connect-to-remote-env",tabindex:"-1"},f=s("a",{class:"header-anchor",href:"#portainer-tls-connect-to-remote-env","aria-label":'Permalink to "Portainer TLS connect to remote env <Badge text="Portainer" type="warning" />"'},"​",-1),_=s("p",null,[s("strong",null,"server"),i(": host that running portainer "),s("strong",null,"client"),i(": host that to be connected to, which is running docker")],-1),B=s("h1",{id:"client-side-config",tabindex:"-1"},[i("client side config "),s("a",{class:"header-anchor",href:"#client-side-config","aria-label":'Permalink to "client side config"'},"​")],-1),A=c(`<h3 id="create-ca-in-client" tabindex="-1">Create CA in client <a class="header-anchor" href="#create-ca-in-client" aria-label="Permalink to &quot;Create CA in client&quot;">​</a></h3><ol><li>create root certificate</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> genrsa</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -aes256</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -out</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ca-key.pem</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 4096</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> req</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -new</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -x509</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -days</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 365</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -key</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ca-key.pem</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -sha256</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -subj</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;/CN=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$HOST</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -out</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ca.pem</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> genrsa</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -out</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server-key.pem</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 4096</span></span></code></pre></div><ol start="2"><li>assign CA using root certificate</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> req</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -new</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -sha256</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    -key</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server-key.pem</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    -subj</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;/C=CN/OU=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$ORG</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/O=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$COMP</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/CN=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$NAME</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    -reqexts</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> SAN</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    -config</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &lt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/ssl/openssl.cnf </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">        &lt;(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">printf</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;\\n[SAN]\\nsubjectAltName=DNS:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$HOST1</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">,DNS:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$HOST2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;))</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    -out</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server.csr</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> x509</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -req</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -days</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 365</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    -in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server.csr</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -out</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server-cert.pem</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    -CA</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ca.pem</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -CAkey</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> ca-key.pem</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -CAcreateserial</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    -extensions</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> SAN</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">    -extfile</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &lt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /etc/ssl/openssl.cnf &lt;(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">printf</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;[SAN]\\nsubjectAltName=DNS:ali-cloud,DNS:</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$HOST2</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;))</span></span></code></pre></div><p>feel free to change HOST, ORG, COMP and NAME to anything you like. For demo purpose, we use <strong>ali-cloud</strong> as $HOST value <em><strong>P.S.</strong></em> if you has sub-domain, you can set $HOST to *.domain.com</p><p><em><strong>P.S.</strong></em></p>`,8),S=c(`<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">find</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -name</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> openssl.cnf</span></span></code></pre></div><ol start="3"><li>verify certificates</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> x509</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -noout</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -text</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -in</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> server-cert.pem</span></span></code></pre></div><ol start="4"><li>config client docker service connection methods</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># /usr/lib/systemd/system/docker.service</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">ExecStart</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/usr/bin/dockerd</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">--tlsverify </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">--tlscacert=/root/portainer/ca.pem </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">--tlscert=/root/portainer/server-cert.pem </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">--tlskey=/root/portainer/server-key.pem </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">-H </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">tcp://0.0.0.0:2376</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">-H </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">unix:///var/run/docker.sock</span></span></code></pre></div><ol start="5"><li>restart docker</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> daemon-reload</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> docker</span></span></code></pre></div><p><em><strong>P.S.</strong></em> remember to open port 2376 on client host</p><hr><h1 id="server-side-config" tabindex="-1">server side config <a class="header-anchor" href="#server-side-config" aria-label="Permalink to &quot;server side config&quot;">​</a></h1>`,10),P=s("ol",null,[s("li",null,[i("open portainer UI, add new environment, select docker standalone then select api connection "),s("img",{src:m,alt:"图片alt",title:"图片title"})]),s("li",null,[i("enable tls, upload ca files of client host, then click connect. "),s("em",null,[s("strong",null,"P.S.")]),i(" remember to add host in server hosts file. e.g. point ali-cloud to actual client host ip "),s("img",{src:D,alt:"图片alt",title:"图片title"})])],-1);function T(a,N,E,$,O,q){const F=r("Badge"),p=C,k=r("ClientOnly"),g=r("font");return h(),u("div",null,[s("h1",b,[i("Portainer TLS connect to remote env "),n(F,{text:"Portainer",type:"warning"}),i(),f]),n(k,null,{default:l(()=>{var t,e;return[(((t=a.$frontmatter)==null?void 0:t.aside)??!0)&&(((e=a.$frontmatter)==null?void 0:e.showArticleMetadata)??!0)?(h(),o(p,{key:0,article:a.$frontmatter},null,8,["article"])):d("",!0)]}),_:1}),_,B,n(k,null,{default:l(()=>{var t,e;return[(((t=a.$frontmatter)==null?void 0:t.aside)??!0)&&(((e=a.$frontmatter)==null?void 0:e.showArticleMetadata)??!0)?(h(),o(p,{key:0,article:a.$frontmatter},null,8,["article"])):d("",!0)]}),_:1}),A,n(g,{color:"red"},{default:l(()=>[i("/etc/ssl/openssl.cnf")]),_:1}),i(" might be found from different directory, use following command to find the right location"),S,n(k,null,{default:l(()=>{var t,e;return[(((t=a.$frontmatter)==null?void 0:t.aside)??!0)&&(((e=a.$frontmatter)==null?void 0:e.showArticleMetadata)??!0)?(h(),o(p,{key:0,article:a.$frontmatter},null,8,["article"])):d("",!0)]}),_:1}),P])}const M=y(v,[["render",T]]);export{V as __pageData,M as default};
