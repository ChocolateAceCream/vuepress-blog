import{_ as d}from"./chunks/ArticleMetadata.URqHhOtO.js";import{_ as g,m as n,a as A,e as k,x as h,u as l,B as y,ah as D,o as t,p as o,q as F}from"./chunks/framework.BuAcqOzq.js";import"./chunks/theme.DMNUqpIk.js";const C="/vuepress-blog/assets/topo.drawio.BDxgmdXY.png",c="/vuepress-blog/assets/1.drawio.D7XKfM3A.png",B="/vuepress-blog/assets/2.drawio.CbvVFSfF.png",R=JSON.parse('{"title":"MinIO Image Hosting","description":"","frontmatter":{"title":"MinIO Image Hosting","author":"ChocolateAceCream","date":"2023/06/27 19:00","isTop":false,"categories":["backend"],"tags":["MinIO","Docker","Nginx","Go"]},"headers":[],"relativePath":"categories/backend/2023/06/27/MinIO_setup.md","filePath":"categories/backend/2023/06/27/MinIO_setup.md","lastUpdated":1714717174000}'),E={name:"categories/backend/2023/06/27/MinIO_setup.md"},u={id:"deploy-minio-using-docker-to-provide-image-hosting-service",tabindex:"-1"},m=k("a",{class:"header-anchor",href:"#deploy-minio-using-docker-to-provide-image-hosting-service","aria-label":'Permalink to "Deploy MinIO using Docker to provide image hosting service <Badge text="MinIO" type="warning" />"'},"​",-1),f=D('<h3 id="purpose" tabindex="-1">Purpose: <a class="header-anchor" href="#purpose" aria-label="Permalink to &quot;Purpose:&quot;">​</a></h3><p>Use MinIO to host images uploading and downloading.</p><h4 id="topology" tabindex="-1">topology <a class="header-anchor" href="#topology" aria-label="Permalink to &quot;topology&quot;">​</a></h4><p><img src="'+C+`" alt="topology"></p><p>Details:</p><ol><li><p>frontend file uploader send a multipart/form-data https request to backend api</p></li><li><p>backend api received file and upload file to minio server using minio client api</p></li><li><p>after uploading success, minio will return file path as callback, then frontend can serve image using that path</p></li><li><p>I used an extra nginx here because I don&#39;t want to expose my ip+port in the image retrieve url, so that nginx will proxy image retrieve url (<a href="https://second.domain" target="_blank" rel="noreferrer">https://second.domain</a>) to minio server(<a href="http://ip" target="_blank" rel="noreferrer">http://ip</a>:port)</p></li><li><p>deploy MinIO using docker-compose</p></li></ol><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;3&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  minio</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">minio/minio:latest</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">blog_minio</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;3050:3050&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> # service api port, also used for health check</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;3060:3060&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> # manage portal port</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">always</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">./data/:/data/</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> # mapping of data storage directory</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">./config/:/root/.minio</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> # configs path</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    environment</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">MINIO_ROOT_USER=\${MINIO_ROOT_USER}</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> # login name and password from env variable</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">MINIO_ROOT_PASSWORD=\${MINIO_ROOT_PASSWORD}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    command</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">server /data --console-address &quot;:3060&quot; --address &quot;:3050&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    healthcheck</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      test</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;CMD&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;curl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;-f&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;http://localhost:3050/minio/health/live&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      interval</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">30s</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      timeout</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">20s</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">      retries</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3</span></span></code></pre></div><ol start="2"><li><p>log in the portal and create a bucket <img src="`+c+'" alt="pic1"></p></li><li><p>edit bucket policy, make it public and we done minio side config <img src="'+B+`" alt="pic2"></p></li><li><p>frontend file uploader</p></li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> uploadImg</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> async</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">files</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> forms</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> FormData</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  forms.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">append</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;file&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, files[</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> { </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> postUploadFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    forms,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">      &#39;Content-Type&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;multipart/form-data&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;-----res-----&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, res)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">  callback</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">([res.data.url]) </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// return url</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>then set request header in axio request interceptors</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">apiAxios.interceptors.request.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">use</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (config[</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Content-Type&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    config.headers[</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Content-Type&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> config[</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Content-Type&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    config.headers[</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;Content-Type&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;application/json;charset=UTF-8&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">})</span></span></code></pre></div><ol start="5"><li>backend api</li></ol><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">//api</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">oa </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">OssApi</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Uploader</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">c</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> *</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">gin</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Context</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	_, header, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> c.Request.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">FormFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;file&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		global.LOGGER.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Fail to receive file&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, zap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(err))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		response.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">FailWithMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;Fail to receive file&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, c)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		return</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	filePath, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ossService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">UploadFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(header) </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 文件上传后拿到文件路径</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		global.LOGGER.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;fail to add file path to DB!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, zap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(err))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		response.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">FailWithMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;fail to add file path to DB&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, c)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		return</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	response.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">OkWithFullDetails</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">UploadFileResult</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{Url: filePath}, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;success&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, c)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">//service</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">os </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">OssService</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">UploadFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">header</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> *</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">multipart</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">FileHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) (</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">err</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	oss </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> upload.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">NewOss</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	path, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> oss.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">UploadFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(header)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">		panic</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(err)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> path, err</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">//trigger minio server api</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Minio</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">UploadFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> *</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">multipart</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">FileHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">string</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> global</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">CONFIG</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Minio</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Port: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3050</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Host: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;blog.easydelivery.ltd&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Username: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;xxxadmin&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Password: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;xxxxxx&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Bucket: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;xxxxx&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> //bucket name you just created on portal</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Region: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;cn&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Https: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">false</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> //whether to use https</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	minioClient </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> newClient</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	filename </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Sprintf</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">%d%s</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, time.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Now</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Unix</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(), file.Filename)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	f, openError </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> file.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Open</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> openError </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		global.LOGGER.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;function file.Open() Filed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, zap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(openError))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		return</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, errors.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">New</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;function file.Open() Filed, err:&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> openError.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	defer</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> f.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Close</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// 创建文件 defer 关闭</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	opts </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> minio</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">PutObjectOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{ContentType: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;application/octet-stream&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	uploadInfo, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> minioClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">PutObject</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(context.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Background</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(), config.Bucket, filename, f, file.Size, opts)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		global.LOGGER.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;function uploader.Upload() Filed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, zap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(err))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		return</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, err</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;https://&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> config.Host </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;/minio/&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> config.Bucket </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &quot;/&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> uploadInfo.Key</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> url, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">nil</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> newClient</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">minio</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Client</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> global</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">CONFIG</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Minio</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Port: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3050</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Host: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;blog.easydelivery.ltd&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Username: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;xxxadmin&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Password: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;xxxxxx&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Bucket: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;xxxxx&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> //bucket name you just created on portal</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Region: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;cn&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    Https: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">false</span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"> //whether to use https</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	minioClient, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> minio.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">New</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(config.Host</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;:&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">config.Port, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">&amp;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">minio</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">Options</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		Creds:  credentials.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">NewStaticV4</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(config.Username, config.Password, </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		Secure: config.Https,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	})</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		global.LOGGER.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;fail to init minio client&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, zap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(err))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">	// Make a new bucket.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	bucketName </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> config.Bucket</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	region </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> config.Region</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	ctx </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> context.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Background</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> minioClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">MakeBucket</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ctx, bucketName, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">minio</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">MakeBucketOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{Region: region})</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> nil</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">		// Check to see if we already own this bucket (which happens if you run this twice)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		exists, errBucketExists </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> minioClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">BucketExists</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(ctx, bucketName)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		if</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> errBucketExists </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> nil</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> exists {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">			global.LOGGER.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Info</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Sprintf</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;We already own </span><span style="--shiki-light:#005CC5;--shiki-dark:#F47067;">%s\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, bucketName))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">			return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> minioClient</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">			global.LOGGER.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;fail to find bucket&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, zap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">Error</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(err))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">			return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> nil</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">		}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">		return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> minioClient</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><ol start="6"><li>nginx config</li></ol><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># load balance</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">upstream</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> blog_minio </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> blog.easydelivery.ltd:3050;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># log config</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">log_format </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> blog_log  </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;remote_addr: $</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">remote_addr</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                      &#39;remote_user: $</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">remote_user</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                      &#39;X-Forwarded-Proto $</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">scheme</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                      &#39;Host $</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http_host</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                      &#39;http_x_forwarded_for: $</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http_x_forwarded_for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[::]:80;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #将 http 重定向 https</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 301</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> https://$server_name$request_uri;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># ssl verification related config</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ssl_session_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 5m</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;    </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#缓存有效期</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ssl_ciphers </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;    </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#encrypt algorithm</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ssl_protocols </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">TLSv1 TLSv1.1 TLSv1.2;    </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#安全链接可选的加密协议</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ssl_prefer_server_ciphers </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;   </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#使用服务器端的首选算法</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#https</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">443</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ssl;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        blog.easydelivery.ltd;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_certificate </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    /etc/nginx/cert/blog.easydelivery.ltd.pem;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_certificate_key </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/etc/nginx/cert/blog.easydelivery.ltd.key;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # $http_host is blog.easydelivery.ltd in this case</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Host $http_host;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # customized header should always start with x</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # $remote_addr is the client ip where request was sent from</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> X-Real-IP $remote_addr;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # if the request go through multiple proxy, we use $proxy_add_x_forwarded_for to track each proxy ip, so we can obtain the whole chain of proxy path, start from origin client ip from left, followed by each proxy ip request passed through</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # $scheme is https in this case.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # this header only useful if we want to identify the origin request is http or https</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">X-Forwarded-Proto $scheme;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # output access_log to logs/blog-web.log, with log format blog_log configured above. Remember to map the log file location if you are using docker containers.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  access_log </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> logs/blog-web.log blog_log;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> /minio/ </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http://blog_minio/; </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># forward request using http</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    # e.g.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    # https://blog.easydelivery.ltd/minio/bucket-name/image-path.png config.Bucket + &quot;/&quot; + uploadInfo.Key will be forwarded as</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    # http://blog.easydelivery.ltd:3050/bucket-name/image-path.png</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div>`,15);function _(s,q,b,v,x,w){const p=n("Badge"),e=d,r=n("ClientOnly");return t(),A("div",null,[k("h1",u,[h("Deploy MinIO using Docker to provide image hosting service "),l(p,{text:"MinIO",type:"warning"}),h(),m]),l(r,null,{default:y(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(t(),o(e,{key:0,article:s.$frontmatter},null,8,["article"])):F("",!0)]}),_:1}),f])}const S=g(E,[["render",_]]);export{R as __pageData,S as default};
