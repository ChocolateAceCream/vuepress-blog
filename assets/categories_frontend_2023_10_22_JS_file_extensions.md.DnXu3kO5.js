import{_ as h}from"./chunks/ArticleMetadata.DnHbt13a.js";import{_ as p,m as k,a as r,u as d,B as o,e,x as c,ah as g,o as n,p as y,q as A}from"./chunks/framework.BuAcqOzq.js";import"./chunks/theme.Dd9Jp5qx.js";const x=JSON.parse('{"title":"JS File extensions","description":"","frontmatter":{"title":"JS File extensions","author":"ChocolateAceCream","date":"2023/10/22 19:00","isTop":false,"categories":["frontend"],"tags":["JavaScript"]},"headers":[],"relativePath":"categories/frontend/2023/10/22/JS_file_extensions.md","filePath":"categories/frontend/2023/10/22/JS_file_extensions.md","lastUpdated":1714766746000}'),D={name:"categories/frontend/2023/10/22/JS_file_extensions.md"},C=e("h1",{id:"iife、cmd、cjs、umd、esm-in-javascript-world",tabindex:"-1"},[c("iife、cmd、cjs、umd、esm in javascript world "),e("a",{class:"header-anchor",href:"#iife、cmd、cjs、umd、esm-in-javascript-world","aria-label":'Permalink to "iife、cmd、cjs、umd、esm in javascript world"'},"​")],-1),u=g(`<h2 id="iife" tabindex="-1">iife <a class="header-anchor" href="#iife" aria-label="Permalink to &quot;iife&quot;">​</a></h2><p>iife stands for Immediately Invoked Function Expression. Usually used as closure.</p><h5 id="why" tabindex="-1">why? <a class="header-anchor" href="#why" aria-label="Permalink to &quot;why?&quot;">​</a></h5><ul><li>avoid global variable name conflict. Anything declared inside iife has scope inside iife.</li><li>preserve variables that passed to the iife since those var is not recycled by gc</li><li>better code encapsulation. e.g a classic jQuery function</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">$</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">window</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">){</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">     // details...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> })(jQuery, window, </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">undefined</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span></code></pre></div><h2 id="cjs" tabindex="-1">cjs <a class="header-anchor" href="#cjs" aria-label="Permalink to &quot;cjs&quot;">​</a></h2><p>cjs stands fro commentjs, widely used in nodejs server side. It has to be imported using module.exports or require()</p><h2 id="umd" tabindex="-1">UMD <a class="header-anchor" href="#umd" aria-label="Permalink to &quot;UMD&quot;">​</a></h2><p>Universal Module Definition, compatible with iife and amd</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">global</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">factory</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	typeof</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ===</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;object&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &amp;&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> typeof</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> module</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> !==</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;undefined&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> ?</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> module</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> factory</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">	typeof</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> define </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;function&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> &amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> define.amd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">?</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> define</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(factory) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">	(global.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">NAME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> factory</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}(</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> () {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    //code</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> obj;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">})));</span></span></code></pre></div><h2 id="esm" tabindex="-1">ESM <a class="header-anchor" href="#esm" aria-label="Permalink to &quot;ESM&quot;">​</a></h2><p>ES2015 official standard, usually cannot run directly in browser until recently. The newer version browser chrome 61+，firefox 60+，safari 11+）can run ESM like this:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#6CB6FF;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;module&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  onst </span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;">increase</span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#F69D50;">total</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> total </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> val;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  // ... stuff</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  export</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> { increase };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">\`\`</span></span></code></pre></div>`,13);function m(s,f,F,B,E,_){const t=h,l=k("ClientOnly");return n(),r("div",null,[C,d(l,null,{default:o(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(n(),y(t,{key:0,article:s.$frontmatter},null,8,["article"])):A("",!0)]}),_:1}),u])}const w=p(D,[["render",m]]);export{x as __pageData,w as default};
