import{_ as h}from"./chunks/ArticleMetadata.CTcAO5KP.js";import{_ as p,m as s,a as u,e as r,x as o,u as i,B as S,ah as _,o as n,p as m,q as g}from"./chunks/framework.BuAcqOzq.js";import"./chunks/theme.DDQuX1XY.js";const T=JSON.parse('{"title":"Serializable Snapshot Isolation","description":"","frontmatter":{"title":"Serializable Snapshot Isolation","author":"ChocolateAceCream","date":"2025/01/03 19:30","isTop":true,"categories":["PostgreSQL"],"tags":["PostgreSQL"]},"headers":[],"relativePath":"courses/PostgreSQL/01-Basic/02-SSI.md","filePath":"courses/PostgreSQL/01-Basic/02-SSI.md","lastUpdated":1736047985000}'),w={name:"courses/PostgreSQL/01-Basic/02-SSI.md"},f={id:"serializable-snapshot-isolation-ssi-in-postgresql-compared-to-plain-snapshot-isolation-si",tabindex:"-1"},b=r("a",{class:"header-anchor",href:"#serializable-snapshot-isolation-ssi-in-postgresql-compared-to-plain-snapshot-isolation-si","aria-label":'Permalink to "Serializable Snapshot Isolation (SSI) in PostgreSQL compared to plain Snapshot Isolation (SI) <Badge text="PostgreSQL" type="warning" />"'},"​",-1),k=_('<p><strong>available with version &gt; 9.1</strong></p><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>When <code>default_transaction_isolation = &#39;serializable&#39;</code> is enabled, SSI will protect you from any conflict transactions. The first committer always wins and other transaction is rolled back.</p><h2 id="cases-when-ssi-is-useful-to-keep-data-consistency" tabindex="-1">cases when ssi is useful to keep data consistency <a class="header-anchor" href="#cases-when-ssi-is-useful-to-keep-data-consistency" aria-label="Permalink to &quot;cases when ssi is useful to keep data consistency&quot;">​</a></h2><h4 id="write-skew" tabindex="-1">write skew: <a class="header-anchor" href="#write-skew" aria-label="Permalink to &quot;write skew:&quot;">​</a></h4><p>Two transactions concurrently read the same data and attempt updates based on their initial reads, leading to inconsistencies.</p><h4 id="deadlocks" tabindex="-1">Deadlocks <a class="header-anchor" href="#deadlocks" aria-label="Permalink to &quot;Deadlocks&quot;">​</a></h4><p>A deadlock occurs when two or more transactions are waiting on resources held by each other, creating a cycle.</p><p>PostgreSQL resolves deadlocks by aborting one of the transactions.</p>',9);function P(e,I,y,v,q,B){const l=s("Badge"),c=h,d=s("ClientOnly");return n(),u("div",null,[r("h1",f,[o("Serializable Snapshot Isolation (SSI) in PostgreSQL compared to plain Snapshot Isolation (SI) "),i(l,{text:"PostgreSQL",type:"warning"}),o(),b]),i(d,null,{default:S(()=>{var a,t;return[(((a=e.$frontmatter)==null?void 0:a.aside)??!0)&&(((t=e.$frontmatter)==null?void 0:t.showArticleMetadata)??!0)?(n(),m(c,{key:0,article:e.$frontmatter},null,8,["article"])):g("",!0)]}),_:1}),k])}const C=p(w,[["render",P]]);export{T as __pageData,C as default};
