import{_ as d}from"./chunks/ArticleMetadata.BbqknxEy.js";import{_ as o,m as n,a as g,e as t,x as l,u as e,B as c,ah as y,o as p,p as A,q as D}from"./chunks/framework.BuAcqOzq.js";import"./chunks/theme.ClFlnpYU.js";const F="/vuepress-blog/assets/1.4tJxZ7L4.png",N=JSON.parse('{"title":"2Layer Nginx","description":"","frontmatter":{"title":"2Layer Nginx","author":"ChocolateAceCream","date":"2023/05/05 19:00","isTop":false,"categories":["backend"],"tags":["Nginx","Docker"]},"headers":[],"relativePath":"categories/backend/2023/05/05/docker-2layer-nginx.md","filePath":"categories/backend/2023/05/05/docker-2layer-nginx.md","lastUpdated":1714678151000}'),C={name:"categories/backend/2023/05/05/docker-2layer-nginx.md"},B={id:"docker-double-layer-nginx",tabindex:"-1"},_=t("a",{class:"header-anchor",href:"#docker-double-layer-nginx","aria-label":'Permalink to "Docker Double Layer Nginx <Badge text="Nginx" type="warning" />"'},"​",-1),u=y('<h2 id="background" tabindex="-1">Background <a class="header-anchor" href="#background" aria-label="Permalink to &quot;Background&quot;">​</a></h2><p>In case you only have bought one domain <a>www.easydelivery.ltd</a>, but you want to host multiple web apps, then only choice left here is using sub-domains, such as <a>photo.easydelivery.ltd</a> or <a>blog.easydelivery.ltd</a></p><p>Normally you can deploy multiple web apps using one nginx docker containers, however, one issue with that approach is that deployment of each app will affect others, since you will need to re-create nginx containers for every deployment. So, one solution for this problem would be utilizing multiple nginx containers to deploy each web apps separately.</p><img src="'+F+`" alt="topology" title="topology"><p>As shown in the network topology, we use a main nginx container to forward requests to each sub-domains, which has fixed configs for its single task --- just forwarding requests.</p><p>Then in each sub-nginx container, we use different nginx config to suit each apps&#39; different demands, and these sub containers can be altered without affecting others.</p><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><ol><li>main nginx config</li></ol><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># load balance</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">upstream</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> blog_server </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> blog.easydelivery.ltd:3040;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">upstream</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> blog_swagger </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> blog.easydelivery.ltd:3030;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># log config</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">log_format </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> blog_log  </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;remote_addr: $</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">remote_addr</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                      &#39;remote_user: $</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">remote_user</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                      &#39;X-Forwarded-Proto $</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">scheme</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                      &#39;Host $</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http_host</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                      &#39;http_x_forwarded_for: $</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http_x_forwarded_for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">[::]:80;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  root </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/var/www/dist-1.12/;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  index </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">index.html;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        www.easydelivery.ltd;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  #将 http 重定向 https</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 301</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> https://$server_name$request_uri;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># ssl verification related config</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ssl_session_timeout </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 5m</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;    </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#缓存有效期</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ssl_ciphers </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;    </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#encrypt algorithm</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ssl_protocols </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">TLSv1 TLSv1.1 TLSv1.2;    </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#安全链接可选的加密协议</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">ssl_prefer_server_ciphers </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;   </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#使用服务器端的首选算法</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#https</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">443</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ssl;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        www.easydelivery.ltd;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  root </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/var/www/dist-1.12/;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  index </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">index.html;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # for https connection, need to provide these certificate infos</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_certificate </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    /etc/nginx/cert/www.easydelivery.ltd.pem;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_certificate_key </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/etc/nginx/cert/www.easydelivery.ltd.key;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">443</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ssl;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        photo.easydelivery.ltd;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  root </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/var/www/photo-art/;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  index </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">index.html;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_certificate </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    /etc/nginx/cert/photo.easydelivery.ltd.pem;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_certificate_key </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/etc/nginx/cert/photo.easydelivery.ltd.key;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">443</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ssl;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        blog.easydelivery.ltd;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_certificate </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    /etc/nginx/cert/blog.easydelivery.ltd.pem;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_certificate_key </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/etc/nginx/cert/blog.easydelivery.ltd.key;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # $http_host is blog.easydelivery.ltd in this case</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">Host $http_host;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # customized header should always start with x</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # $remote_addr is the client ip where request was sent from</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> X-Real-IP $remote_addr;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # if the request go through multiple proxy, we use $proxy_add_x_forwarded_for to track each proxy ip.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # so we can obtain the whole chain of proxy path, start from origin client ip from left, followed by each proxy ip request passed through</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # $scheme is https in this case.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # this header only useful if we want to identify the origin request is http or https</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">X-Forwarded-Proto $scheme;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # output access_log to logs/blog-web.log, with log format blog_log configured above. Remember to map the log file location if you are using docker containers.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  access_log </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> logs/blog-web.log blog_log;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">https://blog_server; </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 设置代理服务器的协议和地址</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> /swagger/ </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">https://blog_swagger;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>We deployed three web apps in this main nginx, one listen to 80 (http) and two other listen to 443 (https). For https web app, we need to specify the ssl_certificates, so don&#39;t forget to map the files location when creating nginx images.</p><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># docker-compose.yml for main nginx</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;3&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  nginx</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">nginx:alpine</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">nginx</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;80:80&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;443:443&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">always</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    privileged</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/root/docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">      # web app dist</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/root/docker/nginx/www/:/var/www/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">      #ssl certificate</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/root/docker/nginx/cert/:/etc/nginx/cert/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">      #logs</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/root/docker/nginx/logs/:/etc/nginx/logs/</span></span></code></pre></div><p>now you can start your main nginx containers using</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> --force-recreate</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -d</span></span></code></pre></div><p>As you should noticed in main nginx config, we forwarded the request for the third app blog, to the sub nginx server running on <a>blog.easydelivery.ltd:3040</a>. So next we need to config the sub nginx server which actually hosting the blog web app.</p><ol start="2"><li>sub nginx config</li></ol><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">log_format </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> blog_log  </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;remote_addr: $</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">remote_addr</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                      &#39;remote_user: $</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">remote_user</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                      &#39;X-Forwarded-Proto $</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">scheme</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                      &#39;Host $</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http_host</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                      &#39;X-Real-IP: $</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http_x_real_ip</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                      &#39;Cookie $</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http_Cookie</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> &#39;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">                      &#39;proxy_add_x_forwarded_for: $</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">proxy_add_x_forwarded_for</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">#https</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">3040</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> ssl;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">        blog.easydelivery.ltd;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  root </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/var/www/dist/;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  index </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">index.html;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  gzip </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  gzip_min_length </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1024</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  gzip_comp_level </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  gzip_http_version </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">1.1</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  gzip_types </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">text/plain text/css application/x-javascript application/javascript application/xml application/json;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">  # still need to specify certificate since we are listening to ssl port</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_certificate </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">    /etc/nginx/cert/blog.easydelivery.ltd.pem;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  ssl_certificate_key </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">/etc/nginx/cert/blog.easydelivery.ltd.key;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> /blog/api </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_set_header </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">X-Forwarded-For $proxy_add_x_forwarded_for;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    # rewrite ^/api/(.*)$ /$1 break;  #重写</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    # where actual backend server listening to</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http://blog.easydelivery.ltd:3030/api; </span><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># 设置代理服务器的协议和地址</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    # proxy_cookie_path  / /blog/api;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">    # proxy_cookie_domain blog.easydelivery.ltd xxx.xx.xx.xx;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    access_log </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> logs/blog-web.log blog_log;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    try_files </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">$uri $uri/ /index.html;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">  location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> /swagger/ </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">    proxy_pass </span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">http://blog.easydelivery.ltd:3030;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span></code></pre></div><p>This sub nginx listen to <a>blog.easydelivery.ltd:3040</a>, and forward all api request (/blog/api) to <a>blog.easydelivery.ltd:3030</a>, where actual backend server running on.</p><div class="language-yml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yml</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># docker-compose.yml for sub nginx</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&#39;3&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">  nginx</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">nuodi/blog-web:latest</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    container_name</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">blog_web</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    ports</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;3040:3040&quot;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    restart</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">always</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    privileged</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#8DDB8C;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/root/docker/blog/web/nginx.conf:/etc/nginx/conf.d/default.conf</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/root/docker/blog/web/dist/:/var/www/blog/</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">      #ssl certificate</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/root/docker/blog/web/cert/:/etc/nginx/cert/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">/root/docker/blog/web/logs/:/etc/nginx/logs/</span></span></code></pre></div><h2 id="summary" tabindex="-1">Summary <a class="header-anchor" href="#summary" aria-label="Permalink to &quot;Summary&quot;">​</a></h2><p>Now every time frontend web app re-packed, we only need to recreate the sub-nginx containers, which will not affect any other web apps since main nginx container remain the same.</p>`,20);function m(s,E,x,b,w,f){const h=n("Badge"),k=d,r=n("ClientOnly");return p(),g("div",null,[t("h1",B,[l("Docker Double Layer Nginx "),e(h,{text:"Nginx",type:"warning"}),l(),_]),e(r,null,{default:c(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(p(),A(k,{key:0,article:s.$frontmatter},null,8,["article"])):D("",!0)]}),_:1}),u])}const S=o(C,[["render",m]]);export{N as __pageData,S as default};
