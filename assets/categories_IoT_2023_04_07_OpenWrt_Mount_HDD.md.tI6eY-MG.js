import{_ as c}from"./chunks/ArticleMetadata.DdR0KDjp.js";import{_ as k,m as i,a as m,e as l,x as a,u as n,B as u,ah as p,o,p as g,q as D}from"./chunks/framework.BuAcqOzq.js";import"./chunks/theme.ClqH_n1A.js";const _="/vuepress-blog/assets/3.K28mBnmC.png",f="/vuepress-blog/assets/1.0dtwggjF.png",y="/vuepress-blog/assets/4.ClZH-4kl.png",F="/vuepress-blog/assets/5.CbqDeC0T.png",M=JSON.parse('{"title":"OpenWrt Mount HDD","description":"","frontmatter":{"title":"OpenWrt Mount HDD","author":"ChocolateAceCream","date":"2023/04/07 19:00","isTop":false,"categories":["IoT"],"tags":["Docker","OpenWrt","Raspberry Pi"]},"headers":[],"relativePath":"categories/IoT/2023/04/07/OpenWrt_Mount_HDD.md","filePath":"categories/IoT/2023/04/07/OpenWrt_Mount_HDD.md","lastUpdated":1714716219000}'),b={name:"categories/IoT/2023/04/07/OpenWrt_Mount_HDD.md"},C={id:"mount-ext4-harddisk-to-openwrt-in-docker",tabindex:"-1"},v=l("a",{class:"header-anchor",href:"#mount-ext4-harddisk-to-openwrt-in-docker","aria-label":'Permalink to "Mount ext4 harddisk to openwrt in docker <Badge text="OpenWrt" type="warning" />"'},"​",-1),w=p(`<h3 id="purpose" tabindex="-1">Purpose <a class="header-anchor" href="#purpose" aria-label="Permalink to &quot;Purpose&quot;">​</a></h3><p>After replacing a 500GB HDD with SSD on my thinkpad x260 (so I can run win10 on my old pal), I plan to use mount this HDD to my raspberry pi to build a NAS. In order to extent its life span, I need to control its sleep-awake status by openwrt (running in docker)</p><h5 id="use-cfdisk-mkfs-ext4-to-format-hdd-into-s-linux-file-system" tabindex="-1">use cfdisk &amp; mkfs.ext4 to format HDD into s linux file system <a class="header-anchor" href="#use-cfdisk-mkfs-ext4-to-format-hdd-into-s-linux-file-system" aria-label="Permalink to &quot;use cfdisk &amp; mkfs.ext4 to format HDD into s linux file system&quot;">​</a></h5><p>Usually, HDD is in nfts format, so first we need to convert it to ext4 by using cfdisk and mkfs.ext4</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># find name of HDD</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">fdisk</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -l</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># use cfdisk to delete all volume of HDD, then create a new volume with whole size of HDD</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">cfdisk</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /dev/sda</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># convert to ext4 format</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">mkfs.ext4</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /dev/sda</span></span></code></pre></div><h5 id="mount-the-hdd-in-openwrt-container" tabindex="-1">mount the HDD in openwrt container <a class="header-anchor" href="#mount-the-hdd-in-openwrt-container" aria-label="Permalink to &quot;mount the HDD in openwrt container&quot;">​</a></h5><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># enter container</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -it</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> openwrt</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> sh</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># create mount dir</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> hdd</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">chmod</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> 777</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> hdd</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># since container has Pi OS privilege, it can detect /dev/sda</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># should also add this in init script</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;">mount</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /deb/sda</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> /hdd</span></span></code></pre></div><img src="`+_+'" alt="图片alt" title="图片title">',8),x=p('<img src="'+f+'" alt="图片alt" title="图片title"><h5 id="config-smb-for-attached-hdd" tabindex="-1">config smb for attached HDD <a class="header-anchor" href="#config-smb-for-attached-hdd" aria-label="Permalink to &quot;config smb for attached HDD&quot;">​</a></h5><ol><li>comment out invalid user and then add the attached HDD</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;"># invalid users = root</span></span></code></pre></div><img src="'+y+'" alt="图片alt" title="图片title"><ol start="2"><li><p>config samba <img src="'+F+'" alt="图片alt" title="图片title"></p></li><li><p>enter the container, set password for samba root user</p></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#F69D50;"> smbpasswd</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;"> root</span></span></code></pre></div><p>Now you can map your driver in windows</p>',8);function H(s,A,T,P,B,O){const r=i("Badge"),h=c,d=i("ClientOnly");return o(),m("div",null,[l("h1",C,[a("Mount ext4 harddisk to openwrt in docker "),n(r,{text:"OpenWrt",type:"warning"}),a(),v]),n(d,null,{default:u(()=>{var t,e;return[(((t=s.$frontmatter)==null?void 0:t.aside)??!0)&&(((e=s.$frontmatter)==null?void 0:e.showArticleMetadata)??!0)?(o(),g(h,{key:0,article:s.$frontmatter},null,8,["article"])):D("",!0)]}),_:1}),w,a(" now you should be able see the mounted hdd in network panel "),x])}const N=k(b,[["render",H]]);export{M as __pageData,N as default};
