import{_ as d}from"./chunks/ArticleMetadata.IVD7DGpy.js";import{_ as k,D as i,o as t,c,k as l,a as n,I as p,w as g,R as m,b,e as _}from"./chunks/framework.lWSK3XUC.js";import"./chunks/md5.US-HucPO.js";const G=JSON.parse('{"title":"Go embed pkg","description":"","frontmatter":{"title":"Go embed pkg","author":"ChocolateAceCream","date":"2023/06/07 19:00","isTop":false,"categories":["backend"],"tags":["Go","embed"]},"headers":[],"relativePath":"categories/backend/2023/06/07/Go_embed_pkg.md","filePath":"categories/backend/2023/06/07/Go_embed_pkg.md","lastUpdated":1714705686000}'),u={name:"categories/backend/2023/06/07/Go_embed_pkg.md"},y={id:"go-embed-pkg",tabindex:"-1"},f=l("a",{class:"header-anchor",href:"#go-embed-pkg","aria-label":'Permalink to "Go embed pkg <Badge text="Go" type="warning" />"'},"​",-1),A=m(`<p>need go1.16+</p><h3 id="purpose" tabindex="-1">Purpose: <a class="header-anchor" href="#purpose" aria-label="Permalink to &quot;Purpose:&quot;">​</a></h3><p>Read a file from host machine File System and convert the file to []byte object, so that object can be embedded into a JSON response and served through an API endpoint.</p><h3 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark-dimmed vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// main.go</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// declare a variable outside the main function</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// p.s.1 no space between // and go</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// p.s.2 static is under same folder of main.go</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">//go:embed static/*.md</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> f embed.FS</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// then and file match that pattern will be detected by embed pkg, so you can be read the file and convert to a []byte stream</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#DCBDFB;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  fileBytes, err </span><span style="--shiki-light:#D73A49;--shiki-dark:#F47067;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;"> f.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">ReadFile</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;static/hello.md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">  fmt.</span><span style="--shiki-light:#005CC5;--shiki-dark:#6CB6FF;">Println</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#96D0FF;">&quot;---fileBytes-----&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">, fileBytes)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ADBAC7;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// p.s.3 cannot use ../ or absolute path in go:embed pattern match,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#768390;">// since it&#39;s not allowed to visit parent dir for safety concern. So always try to define var in top dir</span></span></code></pre></div><h3 id="traps" tabindex="-1">traps <a class="header-anchor" href="#traps" aria-label="Permalink to &quot;traps&quot;">​</a></h3><p>some dir might be ignored by embed by default: .git, .svn, .bzr, .hg and and hidden files(start with . or _)</p><p>for example,</p><blockquote><p>//go:embed images</p></blockquote><p>will not match any files inside images dir which start with . or _ , such as .a.png or _b.jpg</p><p>however,</p><blockquote><p>//go:embed images/*</p></blockquote><p>will match .a.png and _b.jpg</p>`,13);function C(a,D,B,F,v,w){const o=i("Badge"),r=d,h=i("ClientOnly");return t(),c("div",null,[l("h1",y,[n("Go embed pkg "),p(o,{text:"Go",type:"warning"}),n(),f]),p(h,null,{default:g(()=>{var s,e;return[(((s=a.$frontmatter)==null?void 0:s.aside)??!0)&&(((e=a.$frontmatter)==null?void 0:e.showArticleMetadata)??!0)?(t(),b(r,{key:0,article:a.$frontmatter},null,8,["article"])):_("",!0)]}),_:1}),A])}const x=k(u,[["render",C]]);export{G as __pageData,x as default};
